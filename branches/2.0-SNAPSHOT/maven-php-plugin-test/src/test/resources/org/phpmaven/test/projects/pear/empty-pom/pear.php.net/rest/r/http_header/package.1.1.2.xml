<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0" packagerversion="1.4.0a4">
 <name>HTTP_Header</name>
 <summary>OO interface to modify and handle HTTP headers and status codes.</summary>
 <description>This class provides methods to set/modify HTTP headers 
and status codes including an HTTP caching facility.
It also provides methods for checking Status types.
 </description>
 <maintainers>
  <maintainer>
   <user>cain</user>
   <name>Wolfram Kriesing</name>
   <email>wolfram@kriesing.de</email>
   <role>lead</role>
  </maintainer>
  <maintainer>
   <user>davey</user>
   <name>Davey Shafik</name>
   <email>davey@php.net</email>
   <role>lead</role>
  </maintainer>
  <maintainer>
   <user>mike</user>
   <name>Michael Wallner</name>
   <email>mike@php.net</email>
   <role>lead</role>
  </maintainer>
  </maintainers>
 <release>
  <version>1.1.2</version>
  <date>2005-07-18</date>
  <license>PHP License</license>
  <state>stable</state>
  <notes>* Fixed Bug #4338 - Typos in HTTP status messages
  </notes>
  <deps>
   <dep type="pkg" rel="ge" version="1.3.1">HTTP</dep>
   <dep type="pkg" rel="has">PEAR</dep>
   <dep type="php" rel="ge" version="4.2.0"/>
  </deps>
  <provides type="class" name="HTTP_Header" extends="HTTP" />
  <provides type="function" name="HTTP_Header::setHttpVersion" />
  <provides type="function" name="HTTP_Header::getHttpVersion" />
  <provides type="function" name="HTTP_Header::setHeader" />
  <provides type="function" name="HTTP_Header::getHeader" />
  <provides type="function" name="HTTP_Header::sendHeaders" />
  <provides type="function" name="HTTP_Header::sendStatusCode" />
  <provides type="function" name="HTTP_Header::dateToTimestamp" />
  <provides type="function" name="HTTP_Header::redirect" />
  <provides type="function" name="HTTP_Header::getStatusType" />
  <provides type="function" name="HTTP_Header::getStatusText" />
  <provides type="function" name="HTTP_Header::isInformational" />
  <provides type="function" name="HTTP_Header::isSuccessful" />
  <provides type="function" name="HTTP_Header::isRedirect" />
  <provides type="function" name="HTTP_Header::isClientError" />
  <provides type="function" name="HTTP_Header::isServerError" />
  <provides type="function" name="HTTP_Header::isError" />
  <provides type="class" name="HTTP_Header_Cache" extends="HTTP_Header" />
  <provides type="function" name="HTTP_Header_Cache::getCacheStart" />
  <provides type="function" name="HTTP_Header_Cache::isOlderThan" />
  <provides type="function" name="HTTP_Header_Cache::isCached" />
  <provides type="function" name="HTTP_Header_Cache::isPost" />
  <provides type="function" name="HTTP_Header_Cache::exitIfCached" />
  <provides type="function" name="HTTP_Header_Cache::exitCached" />
  <provides type="function" name="HTTP_Header_Cache::setLastModified" />
  <filelist>
   <file role="php" baseinstalldir="HTTP" md5sum="cd2d5dd4132dc364f4dcb3ba504e7dda" name="Header.php"/>
   <file role="php" baseinstalldir="HTTP" md5sum="f3b5fe49677b2bc183db6640729b71d4" name="Header\Cache.php"/>
   <file role="test" baseinstalldir="HTTP" md5sum="1e9be453ad96394789355d497e530653" install-as="response.php" name="tests/response.php"/>
   <file role="test" baseinstalldir="HTTP" md5sum="294999a5c46136b0e7a4e2bf0f43779b" install-as="cacheresponse.php" name="tests/cacheresponse.php"/>
   <file role="test" baseinstalldir="HTTP" md5sum="dd2d7baa7bf79463f7b6d071ae600de3" install-as="header.php" name="tests/header.php"/>
   <file role="test" baseinstalldir="HTTP" md5sum="387d18c59247c881cb96ec3da21c12db" install-as="header_cache.php" name="tests/header_cache.php"/>
   <file role="test" baseinstalldir="HTTP" md5sum="57674de284cab179a509e6e8b67433ab" install-as="README.txt" name="tests/README.txt"/>
  </filelist>
 </release>
 <changelog>
   <release>
    <version>1.1.1</version>
    <date>2004-11-10</date>
    <license>PHP License</license>
    <state>stable</state>
    <notes>* POST requests should *NOT* be cached
    </notes>
   </release>
   <release>
    <version>1.1.0</version>
    <date>2004-08-05</date>
    <license>PHP License</license>
    <state>stable</state>
    <notes>+ Support for Internet Explorer
    </notes>
   </release>
   <release>
    <version>1.0.2</version>
    <date>2004-08-05</date>
    <license>PHP License</license>
    <state>stable</state>
    <notes>* Fixed Bug #2063
    </notes>
   </release>
   <release>
    <version>1.0.1</version>
    <date>2004-08-04</date>
    <license>PHP License</license>
    <state>stable</state>
    <notes>* Don't append a question mark to redirection urls which have no query string
* Fixed Header_Cache::isOlderThan() and Header_Cache::isCached() (finally)
    </notes>
   </release>
   <release>
    <version>1.0.0</version>
    <date>2004-07-21</date>
    <license>PHP License</license>
    <state>stable</state>
    <notes>* Call parent constructor in HTTP_Header_Cache
* Fixed Bug in HTTP_Header_Cache::isCached()
* Fixed Bug #1908 (added optional parameter $session to redirect())
+ Added PHPUnit test cases
    </notes>
   </release>
   <release>
    <version>1.0.0RC1</version>
    <date>2004-07-02</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* First Release Candidate for stable release.
    </notes>
   </release>
   <release>
    <version>0.3.0</version>
    <date>2004-06-12</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* refactored HTTP_Header_Cache
* fixed typos in HTTP_Header::dateToTimestamp()
    </notes>
   </release>
   <release>
    <version>0.2.0</version>
    <date>2004-06-09</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* honor actual HTTP version
* added accessors to HTTP version
* check if headers were alread sent
* marked dateToTimestamp() as deprecated
* general code clean up
    </notes>
   </release>
   <release>
    <version>0.1.6</version>
    <date>2003-12-28</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* Fixed Errors in sendStatusCode
* Fixed all HTTP_Header::isError (and similar) methods
* Fixed HTTP_Header::sendStatusCode
    </notes>
   </release>
   <release>
    <version>0.1.5</version>
    <date>2003-12-09</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* fix in redirect(), when parameter was added, it was always added with ?para=value, 
instead of checking if there was already a param
* added quite some methods by Davey Shafik
* changed HTTP_HEADER_STATUS_* content by Davey Shafik
* added getStatusType() and getStatusText() by Davey Shafik
    </notes>
   </release>
   <release>
    <version>0.1.4</version>
    <date>2003-09-19</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* redirect sends session id by default when trans_sid=1, behaviour has changed!
    </notes>
   </release>
   <release>
    <version>0.1.3</version>
    <date>2003-03-31</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* fixed dateToTimestamp() to retrieve proper cache date
    </notes>
   </release>
   <release>
    <version>0.1.2</version>
    <date>2003-03-10</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>* if redirect has no params given, redirect to PHP_SELF
* Cache::exitIfCached() returns false if isCached() is false
    </notes>
   </release>
   <release>
    <version>0.1.1</version>
    <date>2003-01-27</date>
    <license>PHP License</license>
    <state>alpha</state>
    <notes>- added redirect, which takes care of additional GET vars too
- added all HTTP1.1 code (thanks to Patrick O'Lone)
    </notes>
   </release>
   <release>
    <version>0.1</version>
    <date>2003-01-17</date>
    <license>PHP License</license>
    <state>alpha</state>
    <notes>- initial release in PEAR
    </notes>
   </release>
 </changelog>
</package>
