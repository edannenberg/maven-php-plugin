<?xml version="1.0" encoding="ISO-8859-1" ?>
<package version="1.0">
  <name>Math_Stats</name>
  <summary>Classes to calculate statistical parameters</summary>
  <description>Package to calculate statistical parameters of numerical arrays
of data. The data can be in a simple numerical array, or in a 
cummulative numerical array. A cummulative array, has the value
as the index and the number of repeats as the value for the
array item, e.g. $data = array(3=&gt;4, 2.3=&gt;5, 1.25=&gt;6, 0.5=&gt;3).
Nulls can be rejected, ignored or handled as zero values.</description>
  <maintainers>
    <maintainer>
      <user>jmcastagnetto</user>
      <name>Jesus M. Castagnetto</name>
      <email>jmcastagnetto@php.net</email>
      <role>lead</role>
    </maintainer>
  </maintainers>
  <release>
    <version>0.9.0beta3</version>
    <date>2003-06-12</date>
    <license>PHP</license>
    <state>beta</state>
    <notes>Modified the productN() method to try and avoid numeric overflow, and in case
there is overflow to return an array of values to be multiplied, instead of
a single resulting value. 

Changed also the geometricMean() method to work with the new productN() and
product() methods. Unit tests have been unaffected by the change.</notes>
    <provides type="class" name="Math_Stats" />
    <provides type="function" name="Math_Stats::setData" />
    <provides type="function" name="Math_Stats::getData" />
    <provides type="function" name="Math_Stats::setNullOption" />
    <provides type="function" name="Math_Stats::studentize" />
    <provides type="function" name="Math_Stats::center" />
    <provides type="function" name="Math_Stats::calc" />
    <provides type="function" name="Math_Stats::calcBasic" />
    <provides type="function" name="Math_Stats::calcFull" />
    <provides type="function" name="Math_Stats::min" />
    <provides type="function" name="Math_Stats::max" />
    <provides type="function" name="Math_Stats::sum" />
    <provides type="function" name="Math_Stats::sum2" />
    <provides type="function" name="Math_Stats::sumN" />
    <provides type="function" name="Math_Stats::product" />
    <provides type="function" name="Math_Stats::productN" />
    <provides type="function" name="Math_Stats::count" />
    <provides type="function" name="Math_Stats::mean" />
    <provides type="function" name="Math_Stats::range" />
    <provides type="function" name="Math_Stats::variance" />
    <provides type="function" name="Math_Stats::stDev" />
    <provides type="function" name="Math_Stats::varianceWithMean" />
    <provides type="function" name="Math_Stats::stDevWithMean" />
    <provides type="function" name="Math_Stats::absDev" />
    <provides type="function" name="Math_Stats::absDevWithMean" />
    <provides type="function" name="Math_Stats::skewness" />
    <provides type="function" name="Math_Stats::kurtosis" />
    <provides type="function" name="Math_Stats::median" />
    <provides type="function" name="Math_Stats::mode" />
    <provides type="function" name="Math_Stats::midrange" />
    <provides type="function" name="Math_Stats::geometricMean" />
    <provides type="function" name="Math_Stats::harmonicMean" />
    <provides type="function" name="Math_Stats::sampleCentralMoment" />
    <provides type="function" name="Math_Stats::sampleRawMoment" />
    <provides type="function" name="Math_Stats::coeffOfVariation" />
    <provides type="function" name="Math_Stats::stdErrorOfMean" />
    <provides type="function" name="Math_Stats::frequency" />
    <provides type="function" name="Math_Stats::quartiles" />
    <provides type="function" name="Math_Stats::interquartileMean" />
    <provides type="function" name="Math_Stats::interquartileRange" />
    <provides type="function" name="Math_Stats::quartileDeviation" />
    <provides type="function" name="Math_Stats::quartileVariationCoefficient" />
    <provides type="function" name="Math_Stats::quartileSkewnessCoefficient" />
    <provides type="function" name="Math_Stats::percentile" />
    <provides type="class" name="Math_Stats_UnitTest" extends="PHPUnit_TestCase" />
    <provides type="function" name="Math_Stats_UnitTest::setUp" />
    <provides type="function" name="Math_Stats_UnitTest::tearDown" />
    <provides type="function" name="Math_Stats_UnitTest::testGetData" />
    <provides type="function" name="Math_Stats_UnitTest::testCalcBasic" />
    <provides type="function" name="Math_Stats_UnitTest::testCalcFull" />
    <provides type="function" name="Math_Stats_UnitTest::testMin" />
    <provides type="function" name="Math_Stats_UnitTest::testMax" />
    <provides type="function" name="Math_Stats_UnitTest::testSum" />
    <provides type="function" name="Math_Stats_UnitTest::testSum2" />
    <provides type="function" name="Math_Stats_UnitTest::testSumN" />
    <provides type="function" name="Math_Stats_UnitTest::testProduct" />
    <provides type="function" name="Math_Stats_UnitTest::testProductN" />
    <provides type="function" name="Math_Stats_UnitTest::testCount" />
    <provides type="function" name="Math_Stats_UnitTest::testMean" />
    <provides type="function" name="Math_Stats_UnitTest::testRange" />
    <provides type="function" name="Math_Stats_UnitTest::testVariance" />
    <provides type="function" name="Math_Stats_UnitTest::testStDev" />
    <provides type="function" name="Math_Stats_UnitTest::testVarianceWithMean" />
    <provides type="function" name="Math_Stats_UnitTest::testStDevWithMean" />
    <provides type="function" name="Math_Stats_UnitTest::testAbsDev" />
    <provides type="function" name="Math_Stats_UnitTest::testAbsDevWithMean" />
    <provides type="function" name="Math_Stats_UnitTest::testSkewness" />
    <provides type="function" name="Math_Stats_UnitTest::testKurtosis" />
    <provides type="function" name="Math_Stats_UnitTest::testMedian" />
    <provides type="function" name="Math_Stats_UnitTest::testMode" />
    <provides type="function" name="Math_Stats_UnitTest::testMidrange" />
    <provides type="function" name="Math_Stats_UnitTest::testGeometricMean" />
    <provides type="function" name="Math_Stats_UnitTest::testHarmonicMean" />
    <provides type="function" name="Math_Stats_UnitTest::testSampleCentralMoment" />
    <provides type="function" name="Math_Stats_UnitTest::testSampleRawMoment" />
    <provides type="function" name="Math_Stats_UnitTest::testCoeffOfVariation" />
    <provides type="function" name="Math_Stats_UnitTest::testStdErrorOfMean" />
    <provides type="function" name="Math_Stats_UnitTest::testFrequency" />
    <provides type="function" name="Math_Stats_UnitTest::testQuartiles" />
    <provides type="function" name="Math_Stats_UnitTest::testInterQuartileMean" />
    <provides type="function" name="Math_Stats_UnitTest::testInterquartileRange" />
    <provides type="function" name="Math_Stats_UnitTest::testQuartileDeviation" />
    <provides type="function" name="Math_Stats_UnitTest::testQuartileVariationCoefficient" />
    <provides type="function" name="Math_Stats_UnitTest::testQuartileSkewnessCoefficient" />
    <provides type="function" name="Math_Stats_UnitTest::testPercentile" />
    <provides type="function" name="Math_Stats_UnitTest::testStudentize" />
    <provides type="function" name="Math_Stats_UnitTest::testCenter" />
    <provides type="function" name="Math_Stats_UnitTest::formatNumber" />
    <provides type="function" name="Math_Stats_UnitTest::formatArray" />
    <filelist>
      <file role="php" baseinstalldir="Math" md5sum="81446431693a2bd89069345262c64978" name="Stats.php"/>
      <file role="php" baseinstalldir="Math" md5sum="a536b182373b00e6c6954e4c514f1188" name="examples/ex_stats_simple.php"/>
      <file role="php" baseinstalldir="Math" md5sum="3e65e07dce5eee319328d5db9c8e1cf4" name="examples/ex_stats_cummulative_data.php"/>
      <file role="php" baseinstalldir="Math" md5sum="cd6efdec10bc5455e8cfa85833b67393" name="test/test_Math_Stats_instance_methods.php"/>
      <file role="php" baseinstalldir="Math" md5sum="b4687be92f2432d2bf7be3db259ed233" name="test/test_Math_Stats_instance_methods-data.php"/>
      <file role="doc" baseinstalldir="Math" md5sum="155b44a1abf5b6975f695539fc9a6028" name="README-Math_Stats"/>
    </filelist>
  </release>
  <changelog>
    <release>
      <version>0.9.0beta2</version>
      <date>2003-06-04</date>
      <state>beta</state>
      <notes>This is a bug fix release. Fixes (finally) an old bug in calculation of the
median. Users of any previous version are recommended to upgrade.

When I fixed a previous bug in the calculation of the median, I forgot to apply
the full fix, so it was calculating an erroneous value for data sets with an 
odd number of entries.

Thanks to Diego Puga for pointing this out. It is good to get bug reports
when one is getting old and forgetful. ;-)

    
</notes>
    </release>
    <release>
      <version>0.9.0beta1</version>
      <date>2003-06-02</date>
      <state>beta</state>
      <notes>This is a beta release that containes new not thoroughly tested methods and
algorithms.

Many changes in the existing methods, and a number of new ones:

- Added better error handling.
- Refactored existing methods to delegate calculations better
- Added value caching for invariant statistical parameters
- Added optional parameters to some existing methods to enhance their
  processing or output. Preserve the original behaviour as default so
  as not breack backwards compatibility
- Added new methods:
  - center()
  - studentize()
  - range()
  - geometricMean()
  - harmonicMean()
  - product()
  - productN()
  - percentile()
  - quartiles()
  - interquartileMean()
  - interquartileRange()
  - quartileDeviation()
  - quartileVariationCoefficient()
  - quartileSkewnessCoefficient()
- Added a unit test class based on PEAR::PHPUnit

    
</notes>
    </release>
    <release>
      <version>0.8.5</version>
      <date>2003-05-27</date>
      <state>stable</state>
      <notes>Added methods sampleCentralMoment() and sampleRawMoment() to
calculate the corresponding nth moments of the data set.
Explicit casting of parameters passed to pow() to 
circumvent the warnings/errors given by some versions
of the PHP interpreter. Thanks to Stephen Evans for
pointing this problem out.
</notes>
    </release>
    <release>
      <version>0.8.4</version>
      <date>2003-05-16</date>
      <notes>Fixed problem in element selection for the calculation
of the median. Thanks to Jeff Hoover for finding this bug.
</notes>
    </release>
    <release>
      <version>0.8.4</version>
      <date>2002-05-16</date>
      <notes>Fixed problem in element selection for the calculation
of the median. Thanks to Jeff Hoover for finding this bug.
</notes>
    </release>
    <release>
      <version>0.8.3</version>
      <date>2002-05-23</date>
      <notes>Another bug fix release. Version 0.8.2 was not released due
</notes>
    </release>
    <release>
      <version>0.8.1</version>
      <date>2002-05-23</date>
      <notes>Bug fix in __sumdiff() and in __sumabsdev(), which made
</notes>
    </release>
    <release>
      <version>0.8.0</version>
      <date>2002-05-15</date>
      <notes>Initial release
</notes>
    </release>
  </changelog>
</package>
