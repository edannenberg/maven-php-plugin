<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0">
  <name>XML_HTMLSax</name>
  <summary>A SAX based parser for HTML and other badly formed XML documents</summary>
  <description>XML_HTMLSax is a SAX based XML parser for badly formed XML documents, such as HTML.
  The original code base was developed by Alexander Zhukov and published at http://sourceforge.net/projects/phpshelve/. Alexander kindly gave permission to modify the code and license for inclusion in PEAR.

  PEAR::XML_HTMLSax provides an API very similar to the native PHP Expat extension, allowing handlers using one to be easily adapted to the other. The key difference is HTMLSax will not break on badly formed XML, allowing it to be used for parsing HTML documents. Otherwise HTMLSax supports all the handlers available from Expat except namespace and external entity handlers. Provides methods for handling XML escapes as well as JSP/ASP opening and close tags.

  Version 2 has had it's internals completely overhauled to use a Lexer, delivering performance *approaching* that of the native XML extension, as well as a radically improved, modular design that makes adding further functionality easy.

  The public API has remained the same as older versions, except for the set_option() method, the available options having been renamed. Additional options are now also available, which allow HTMLSax to behave almost exactly like the native Expat extension. For example if the contents of XML elements contain linefeeds, tabs and XML entities, HTMLSax can be instructed to trigger additional data handler calls.

  A big thanks to Jeff Moore (lead developer of WACT: http://wact.sourceforge.net) who's largely responsible for new design, as well input from other members at Sitepoint's Advanced PHP forums: http://www.sitepointforums.com/showthread.php?threadid=121246.</description>
  <maintainers>
    <maintainer>
      <user>hfuecks</user>
      <name>Harry Fuecks</name>
      <email>hfuecks@phppatterns.com</email>
      <role>lead</role>
    </maintainer>
  </maintainers>
  <release>
    <version>2.0.2</version>
    <date>2003-08-18</date>
    <license>PHP</license>
    <state>alpha</state>
    <notes>* Removed accidental call time pass reference</notes>
    <deps>
      <dep type="php" rel="ge" version="4.0.5"/>
    </deps>
    <provides type="class" name="XML_HTMLSax_StateParser" />
    <provides type="class" name="XML_HTMLSax_StateParser_Lt430" extends="XML_HTMLSax_StateParser" />
    <provides type="class" name="XML_HTMLSax_StateParser_Gtet430" extends="XML_HTMLSax_StateParser" />
    <provides type="class" name="XML_HTMLSax_NullHandler" />
    <provides type="class" name="XML_HTMLSax" extends="Pear" />
    <provides type="function" name="XML_HTMLSax_StateParser::unscanCharacter" />
    <provides type="function" name="XML_HTMLSax_StateParser::ignoreCharacter" />
    <provides type="function" name="XML_HTMLSax_StateParser::scanCharacter" />
    <provides type="function" name="XML_HTMLSax_StateParser::scanUntilString" />
    <provides type="function" name="XML_HTMLSax_StateParser::scanUntilCharacters" />
    <provides type="function" name="XML_HTMLSax_StateParser::ignoreWhitespace" />
    <provides type="function" name="XML_HTMLSax_StateParser::parse" />
    <provides type="function" name="XML_HTMLSax_StateParser_Lt430::scanUntilCharacters" />
    <provides type="function" name="XML_HTMLSax_StateParser_Lt430::ignoreWhitespace" />
    <provides type="function" name="XML_HTMLSax_StateParser_Lt430::parse" />
    <provides type="function" name="XML_HTMLSax_StateParser_Gtet430::scanUntilCharacters" />
    <provides type="function" name="XML_HTMLSax_StateParser_Gtet430::ignoreWhitespace" />
    <provides type="function" name="XML_HTMLSax_StateParser_Gtet430::parse" />
    <provides type="function" name="XML_HTMLSax_NullHandler::DoNothing" />
    <provides type="function" name="XML_HTMLSax::set_object" />
    <provides type="function" name="XML_HTMLSax::set_option" />
    <provides type="function" name="XML_HTMLSax::set_data_handler" />
    <provides type="function" name="XML_HTMLSax::set_element_handler" />
    <provides type="function" name="XML_HTMLSax::set_pi_handler" />
    <provides type="function" name="XML_HTMLSax::set_escape_handler" />
    <provides type="function" name="XML_HTMLSax::set_jasp_handler" />
    <provides type="function" name="XML_HTMLSax::get_current_position" />
    <provides type="function" name="XML_HTMLSax::get_length" />
    <provides type="function" name="XML_HTMLSax::parse" />
    <provides type="class" name="XML_HTMLSax_StartingState" />
    <provides type="class" name="XML_HTMLSax_TagState" />
    <provides type="class" name="XML_HTMLSax_ClosingTagState" />
    <provides type="class" name="XML_HTMLSax_OpeningTagState" />
    <provides type="class" name="XML_HTMLSax_AttributeStartState" />
    <provides type="class" name="XML_HTMLSax_EscapeState" />
    <provides type="class" name="XML_HTMLSax_JaspState" />
    <provides type="class" name="XML_HTMLSax_PiState" />
    <provides type="function" name="XML_HTMLSax_StartingState::parse" />
    <provides type="function" name="XML_HTMLSax_TagState::parse" />
    <provides type="function" name="XML_HTMLSax_ClosingTagState::parse" />
    <provides type="function" name="XML_HTMLSax_OpeningTagState::attributeHandler" />
    <provides type="function" name="XML_HTMLSax_OpeningTagState::parse" />
    <provides type="function" name="XML_HTMLSax_AttributeStartState::parse" />
    <provides type="function" name="XML_HTMLSax_EscapeState::parse" />
    <provides type="function" name="XML_HTMLSax_JaspState::parse" />
    <provides type="function" name="XML_HTMLSax_PiState::parse" />
    <provides type="class" name="XML_HTMLSax_Trim" />
    <provides type="class" name="XML_HTMLSax_CaseFolding" />
    <provides type="class" name="XML_HTMLSax_Linefeed" />
    <provides type="class" name="XML_HTMLSax_Tab" />
    <provides type="class" name="XML_HTMLSax_Entities_Parsed" />
    <provides type="class" name="XML_HTMLSax_Entities_Unparsed" />
    <provides type="function" name="XML_HTMLSax_Trim::trimData" />
    <provides type="function" name="XML_HTMLSax_CaseFolding::foldOpen" />
    <provides type="function" name="XML_HTMLSax_CaseFolding::foldClose" />
    <provides type="function" name="XML_HTMLSax_Linefeed::breakData" />
    <provides type="function" name="XML_HTMLSax_Tab::breakData" />
    <provides type="function" name="XML_HTMLSax_Entities_Parsed::breakData" />
    <provides type="function" name="XML_HTMLSax_Entities_Unparsed::breakData" />
    <provides type="class" name="MyHandler" />
    <provides type="function" name="MyHandler::openHandler" />
    <provides type="function" name="MyHandler::closeHandler" />
    <provides type="function" name="MyHandler::dataHandler" />
    <provides type="function" name="MyHandler::escapeHandler" />
    <provides type="function" name="MyHandler::piHandler" />
    <provides type="function" name="MyHandler::jaspHandler" />
    <provides type="class" name="HTMLtoXHTMLHandler" />
    <provides type="function" name="HTMLtoXHTMLHandler::writeAttrs" />
    <provides type="function" name="HTMLtoXHTMLHandler::openHandler" />
    <provides type="function" name="HTMLtoXHTMLHandler::closeHandler" />
    <provides type="function" name="HTMLtoXHTMLHandler::dataHandler" />
    <provides type="function" name="HTMLtoXHTMLHandler::escapeHandler" />
    <provides type="function" name="HTMLtoXHTMLHandler::getXHTML" />
    <provides type="function" name="getmicrotime" />
    <filelist>
      <file role="php" baseinstalldir="XML" md5sum="cdd748f1375a975991155b8500649093" name="XML_HTMLSax.php"/>
      <file role="php" baseinstalldir="XML" md5sum="849b9b03a57fcd3a6bdd2bec9fab148f" name="HTMLSax/XML_HTMLSax_States.php"/>
      <file role="php" baseinstalldir="XML" md5sum="9822f2acb96742a3c4cc61ca78d3cd9d" name="HTMLSax/XML_HTMLSax_Decorators.php"/>
      <file role="doc" baseinstalldir="XML" md5sum="383b80b28cdd8585f06937e51daefbc3" name="docs/Readme"/>
      <file role="php" baseinstalldir="XML" md5sum="212961f0b0437c92ce65128bf1e33740" name="docs/examples/SimpleExample.php"/>
      <file role="php" baseinstalldir="XML" md5sum="ee798189d1ff9b1f614ab4f13c916cc4" name="docs/examples/HTMLtoXHTML.php"/>
      <file role="php" baseinstalldir="XML" md5sum="23f122dad1412ef196b880c9b646662c" name="docs/examples/ExpatvsHtmlSax.php"/>
      <file role="data" baseinstalldir="XML" md5sum="6d8e0358d7581138624843192f29b1fc" name="docs/examples/example.html"/>
    </filelist>
  </release>
  <changelog>
    <release>
      <version>2.0.1</version>
      <date>2003-08-11</date>
      <state>alpha</state>
      <notes>* API is backwards compatible apart from the renaming of parser options
* Performance dramatically increased. Not much slower than Expat
* Better handling of XML comments and CDATA
* Option to trigger additional data handler calls for linefeeds and tabs
* Option to trigger additional data handler calls for XML entities and parse them if required.
* Added public get_current_position() and get_length() methods
</notes>
    </release>
    <release>
      <version>1.1</version>
      <date>2003-06-26</date>
      <state>stable</state>
      <notes>* Bug fixes to Attribute_Parser to cope with newline, tag, forward slash and whitespace issues.

</notes>
    </release>
    <release>
      <version>1.0</version>
      <date>2003-06-08</date>
      <state>stable</state>
      <notes>* Modifications to file structure to place Attributes_Parser.php
  and State_Machine.php in subdirectory HTMLSax
* XML_HTMLSax.php includes Attributes_Parser.php and State_Machine.php
  using require_once()


</notes>
    </release>
    <release>
      <version>0.9.0rc2</version>
      <date>2003-05-18</date>
      <state>beta</state>
      <notes>*First release under PEAR
*Changed package name to XML_HTMLSax
*Added patch from John Luxford to parse single quoted attributes
*Modified State_Machine to be a simple variable store




</notes>
    </release>
    <release>
      <version>0.9.0rc1</version>
      <date>2003-05-09</date>
      <state>beta</state>
      <notes>A summary of the main differences between this version
      of HTML_Sax and HTMLSax2002082201 are as follows;
      *Instead of extending HTMLSax with your own &quot;handlers&quot; class,
       you now use the set_object() method to pass an instance of the
       class to HTMLSax.
      *Class method callbacks are specified using the following methods;
      *set_element_handler('startHandler','endHandler') &lt;tag&gt; and &lt;/tag&gt;
      *set_data_handler('dataHandler') for contents of an element
      *set_pi_handler('piHandler') for &lt;?php ?&gt;, &lt;?xml ?&gt; etc.
      *set_escape_handler(') for anything beginning with &lt;!
      *set_jasp_handler() - set listener for &lt;% %&gt; tags
      *Attributes which no value are created and set to true
      *Comments are handled and may contain entities; &lt; &gt;
      *The callback handlers will all be passed an instance of HTMLSax
       in the same way as the native PHP XML Expat extension
      *Setting of parser options is handled specifically by the set_option()
       method. Available options are;
      *skipWhiteSpace; instruct the parser to ignore whitespace characters
      *trimDataNodes; trim whitespace inside character data
      *breakOnNewLine; newline characters found in character data are treated
       as new events triggering another data callback
      *caseFolding; converts element names to uppercase


</notes>
    </release>
  </changelog>
</package>
