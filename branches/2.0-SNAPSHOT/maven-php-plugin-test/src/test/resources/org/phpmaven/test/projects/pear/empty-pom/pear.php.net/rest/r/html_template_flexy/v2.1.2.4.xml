<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/html_template_flexy">HTML_Template_Flexy</p>
 <c>pear.php.net</c>
 <v>1.2.4</v>
 <a>1.2.4</a>
 <mp>4.3.0</mp>
 <st>stable</st>
 <l>PHP License</l>
 <m>alan_k</m>
 <s>An extremely powerful Tokenizer driven Template engine</s>
 <d>HTML_Template_Flexy started it's life as a simplification of HTML_Template_Xipe, 
however in Version 0.2, It became one of the first template engine to use a real Lexer,
rather than regex'es, making it possible to do things like ASP.net or Cold Fusion tags. 
However, it still has a very simple set of goals.
- Very Simple API, 
   o easy to learn...
   o prevents to much logic going in templates
- Easy to write document'able code
   o By using object vars for a template rather than 'assign', you 
     can use phpdoc comments to list what variable you use.
- Editable in WYSIWYG editors
   o you can create full featured templates, that doesnt get broken every time you edit with 
     Dreamweaver(tm) or Mozilla editor
   o Uses namespaced attributes to add looping/conditionals  
- Extremely Fast, 
   o runtime is at least 4 time smaller than most other template engines (eg. Smarty)
   o uses compiled templates, as a result it is many times faster on blocks and loops than 
     than Regex templates (eg. IT/phplib)
- Safer (for cross site scripting attacks)
   o All variables default to be output as HTML escaped (overridden with the :h modifier)
- Multilanguage support
   o Parses strings out of template, so you can build translation tools
   o Compiles language specific templates (so translation is only done once, not on every request)
- Full dynamic element support (like ASP.NET), so you can pick elements to replace at runtime

Features:
- {variable} to echo $object-&gt;variable
- {method()} to echo $object-&gt;method();
- {foreach:var,key,value} to PHP foreach loops
- tag attributes FLEXY:FOREACH, FLEXY:IF for looping and conditional HTML inclusion
- {if:variable} to PHP If statement
- {if:method()} to PHP If statement
- {else:} and {end:} to close or alternate If statements
- FORM to HTML_Template_Flexy_Element's
- replacement of INPUT, TEXTAREA and SELECT tags with HTML_Template_Flexy_Element code
  use FLEXY:IGNORE (inherited) and FLEXY:IGNOREONLY (single) to prevent replacements
- FLEXY:START/FLEXY:STARTCHILDREN tags to define where template starts/finishes
- support for urlencoded braces {} in HTML attributes.  
- documentation in the pear manual

- examples at http://cvs.php.net/cvs.php/pear/HTML_Template_Flexy/tests/
 
</d>
 <da>2006-01-20 03:04:58</da>
 <n>Minor Bugfix / New Feature Release
    
    
  Bugs  
  ----
  #6152 - default to using key in optgroup when novalue not set
  #5267 - checkboxes using [], with ids
  #5752 - add support for :e modifier == htmlentities() call.
  
  
  Features/Changes and Fixes
  --------------------------
  * add ability to remove unused translations (in HTML_Template_Flexy_Translator,
    tidy up javascript a little (ivan)
    
  * add support for gettext Translation2 backend - Requires uptodate version of 
    Gettext/Translation2 packages ... (ivan)
    
  * remove warning from compiled template, when trying to merge possibly 
    non-existant elements
  
  * remove short tags output from Simpletags compiler backend. + lots of 
    whitespace changes, for some reason... (Demian Turner)
  
  * basic charset support in HTML_Template_Flexy_Element ... this is
    a todo for the rendering layer though... (eg. utf8 / big5 sent to htmlspecialchars)
    
  * de-escaping of &amp;amp;nbsp; only used in select option text - removed this feature from
    other elements
    
  * add XUL checkbox support.
  
  * correctly replace linefeeds on XUL textbox's
  
  * better handling of XUL textbox and menulist elements converted to
    Flexy XUL Elements
    
  * flexy:nameuses also replaces in id (obviously if %s is included)</n>
 <f>120381</f>
 <g>http://pear.php.net/get/HTML_Template_Flexy-1.2.4</g>
 <x xlink:href="package.1.2.4.xml"/>
</r>