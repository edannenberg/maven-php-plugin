<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0">
  <name>HTML_QuickForm_Controller</name>
  <summary>The add-on to HTML_QuickForm package that allows building of multipage forms</summary>
  <description>The package is essentially an implementation of a PageController pattern.
Architecture:
* Controller class that examines HTTP requests and manages form values persistence across requests.
* Page class (subclass of QuickForm) representing a single page of the form.
* Business logic is contained in subclasses of Action class.
Cool features:
* Includes several default Actions that allow easy building of multipage forms.
* Includes usage examples for common usage cases (single-page form, wizard, tabbed form).</description>
  <maintainers>
    <maintainer>
      <user>avb</user>
      <name>Alexey Borzov</name>
      <email>borz_off@cs.msu.su</email>
      <role>lead</role>
    </maintainer>
    <maintainer>
      <user>mansion</user>
      <name>Bertrand Mansion</name>
      <email>bmansion@mamasam.com</email>
      <role>developer</role>
    </maintainer>
  </maintainers>
  <release>
    <version>1.0.2</version>
    <date>2004-03-23</date>
    <license>PHP License</license>
    <state>stable</state>
    <notes>* HTML_QuickForm_Controller does not rely on form's &quot;name&quot; attribute anymore
  (XHTML compliance fix, see also bug #925)
* Use new HTML_QuickForm::arrayMerge() method in place of PHP's builtin
  array_merge(), depend on QuickForm 3.2.2
* Applied patch from #929, exportValues() does not overwrite elements with
  the same names from different pages.</notes>
    <deps>
      <dep type="pkg" rel="ge" version="3.2.2">HTML_QuickForm</dep>
    </deps>
    <filelist>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Action.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Controller.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Page.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Action/Back.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Action/Direct.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Action/Display.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Action/Jump.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Action/Next.php"/>
      <file role="php" baseinstalldir="HTML/QuickForm" name="Action/Submit.php"/>
      <file role="doc" baseinstalldir="HTML/QuickForm" name="examples/simple.php"/>
      <file role="doc" baseinstalldir="HTML/QuickForm" name="examples/tabbed.php"/>
      <file role="doc" baseinstalldir="HTML/QuickForm" name="examples/wizard.php"/>
      <file role="doc" baseinstalldir="HTML/QuickForm" name="examples/regWizard.php"/>
      <file role="doc" baseinstalldir="HTML/QuickForm" name="examples/upload.php"/>
      <file role="doc" baseinstalldir="HTML/QuickForm" name="examples/templates/upload.html"/>
      <file role="doc" baseinstalldir="HTML/QuickForm" name="examples/statemachine.php"/>
    </filelist>
  </release>
  <changelog>
    <release>
      <version>1.0.1</version>
      <date>2003-12-11</date>
      <state>stable</state>
      <notes>* Added a new example showing how to proceed to either of the two pages
  based on user input (Donald Lobo).
      
</notes>
    </release>
    <release>
      <version>1.0</version>
      <date>2003-11-05</date>
      <state>stable</state>
      <notes>This release is done to update package's status to 'stable'. The code is now
considered mature and tested enough to be used in production.

Changes:
* No changes to classes since 0.9.3
* Added an example of wizard with file upload (Bertrand Mansion)
* Depend on newest version of HTML_QuickForm 
      
</notes>
    </release>
    <release>
      <version>0.9.3</version>
      <date>2003-10-24</date>
      <state>beta</state>
      <notes>* Controller now differentiates between invalid and not-yet-validated pages. False is stored
in container's ['valid'][$pageName] field for the former, null for the latter. This is
a POTENTIAL BC BREAK, so pay attention if you wrote your own Actions.
* Back action in modal forms does not validate the page anymore (the previous behaviour was
non-intuitive, thanks to Bob Van Zant for reporting).
      
</notes>
    </release>
    <release>
      <version>0.9.2</version>
      <date>2003-10-02</date>
      <state>beta</state>
      <notes>Added Page::setDefaultAction() method to fix the Controller's behaviour when user presses
Enter instead of clicking on one of submit buttons. Thanks to Mike Carter for reporting this.
      
</notes>
    </release>
    <release>
      <version>0.9.1</version>
      <date>2003-09-19</date>
      <state>beta</state>
      <notes>Changes and additions:
* Added Controller::exportValue() method (thanks to Arnaud Limbourg)
* Controller::exportValues() can return values for the single page (thanks to Arnaud Limbourg)
* Added a parameter for Controller::container() that forces the container reset
* Added a new example: registration wizard (Bertrand Mansion)

Fixes:
* Action_Next on the last page validates the whole form, not just the page itself
      
</notes>
    </release>
    <release>
      <version>0.9</version>
      <date>2003-08-29</date>
      <state>beta</state>
      <notes>Initial PEAR release
      
</notes>
    </release>
  </changelog>
</package>
