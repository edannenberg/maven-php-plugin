<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/i18n_unicodenormalizer">I18N_UnicodeNormalizer</p>
 <c>pear.php.net</c>
 <v>1.0.0RC4</v>
 <a>1.0.0RC4</a>
 <mp>5.0</mp>
 <st>beta</st>
 <l>The BSD License</l>
 <m>mcorne</m>
 <s>Unicode Normalizer</s>
 <d>&quot;...Unicode's normalization is the concept of character composition and decomposition.
Character composition is the process of combining simpler characters into fewer precomposed characters, such as the n character and the combining ~ character into the single n+~ character. Decomposition is the opposite process, breaking precomposed characters back into their component pieces...
...Normalization is important when comparing text strings for searching and sorting (collation)...&quot; [Wikipedia] 
Performs the 4 normalizations:
NFD:  Canonical Decomposition NFC:  Canonical Decomposition, followed by Canonical Composition NFKD: Compatibility Decomposition NFKC: Compatibility Decomposition, followed by Canonical Composition Complies with the official Unicode.org regression test.
Uses UTF8 binary strings natively but can normalize a string in any UTF format.
Fully tested with phpUnit. Code coverage test close to 100%.</d>
 <da>2007-07-25 08:44:37</da>
 <n>* Fixed Bug #11674: test failures on 64-bit Linux, 
actually due to PHP Bug #42101: mb_substr error if length = PHP_INT_MAX</n>
 <f>2154550</f>
 <g>http://pear.php.net/get/I18N_UnicodeNormalizer-1.0.0RC4</g>
 <x xlink:href="package.1.0.0RC4.xml"/>
</r>