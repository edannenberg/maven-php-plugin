<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/html_quickform2">HTML_QuickForm2</p>
 <c>pear.php.net</c>
 <v>0.5.0</v>
 <a>0.5.0</a>
 <mp>5.2.0</mp>
 <st>alpha</st>
 <l>BSD</l>
 <m>avb</m>
 <s>PHP5 rewrite of HTML_QuickForm package</s>
 <d>PHP5 rewrite of HTML_QuickForm and HTML_QuickForm_Controller packages.
 
 This package provides methods to create, validate and render HTML forms.
 
 Features:
   * Supports all form elements defined by HTML standard, provides several
     custom elements
   * Server-side and client-side validation, several common rules provided
   * Multipage forms (tabbed forms and wizards)
   * Pluggable elements, rules, renderers and renderer plugins

 Major advantages over PHP4 version:
   * DOM-like API for building the form structure, new streamlined API for 
     elements' values handling
   * Default rendering without tables (inspired by
     HTML_QuickForm_Renderer_Tableless)
   * Renderer plugins for elements with complex rendering needs
   * Ability to chain validation rules with 'and' and 'or'</d>
 <da>2010-12-09 09:22:24</da>
 <n>Milestone 5: Javascript support, client-side validation, filters

Major additions and changes
  * It is now possible to run validation rules client-side as well as 
    server-side. This is controlled by passing a parameter to addRule()
  * Implemented client-side validation for most builtin rules (MaxFileSize and
    MimeType rules for file uploads cannot work client-side)
  * Added JavascriptBuilder class, an instance of that is stored in Renderer and
    aggregates client-side rules, references to Javascript library files and
    Javascript for elements' initialization. Inline Javascript can be easily
    added with a special Script element
  * Implemented base Javascript library to support client-side validation.
    It should hopefully allow easier customization than inline Javascript in
    HTML_QuickForm 3.x
  * Implemented addFilter() and addRecursiveFilter() methods which can be used
    to (recursively) apply filter callbacks to element values when calling
    getValue(). A new getRawValue() method allows getting unfiltered values.

Other features and changes
  * Ported Date element from HTML_QuickForm 3.x
  * Ported Hierselect element from HTML_QuickForm 3.x, it can now use callbacks
    to load additional options via AJAX (see enclosed hierselect-ajax.php example)
  * Ported Static element from HTML_QuickForm 3.x
  * Added HTML_QuickForm2_Node::getData() method
  * Added NotCallback and NotRegex rules, they consider element valid if callback
    returns false for its value / if the value does not match regex, respectively
  * It is now possible for autogenerated 'id' attributes to not have mandatory
    indexes appended. Use HTML_Common2::setOption('id_force_append_index', false);
  * Container rules are called after rules on contained elements (request #17576)

Bug fixes
  * Added a div around form elements to prevent generating invalid HTML (bug #17217)
  * Fixed counterintuitive behaviour of DataSource_Array (reported by Cedrick Gout
    in pear-general mailing list)

Backwards compatibility issues
  * Methods marked as deprecated in release 0.4.0 are now removed</n>
 <f>138925</f>
 <g>http://pear.php.net/get/HTML_QuickForm2-0.5.0</g>
 <x xlink:href="package.0.5.0.xml"/>
</r>