<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/html_template_flexy">HTML_Template_Flexy</p>
 <c>pear.php.net</c>
 <v>0.5</v>
 <a>0.5</a>
 <mp>4.3.0</mp>
 <st>beta</st>
 <l>PHP License</l>
 <m>alan_k</m>
 <s>An extremely powerful Tokenizer driven Template engine</s>
 <d>HTML_Template_Flexy started it's life as a simplification of HTML_Template_Xipe, 
however in Version 0.2, It became one of the first template engine to use a real Lexer,
rather than regex'es, making it possible to do things like ASP.net or Cold Fusion tags. 
However, it still has a very simple set of goals.
- Very Simple API, easy to learn...
- Targeted at Object based systems - default behavior is to display object variables
- Designed to allow the documentation of available variables using PEAR standards, eg. PHPDoc comments around object variables
- Ability to edit the templates in WYSIWYG HTML editors, without breaking the tags
- Extremely Fast, for normal variables and looping (or blocks), both for designing and runtime.
- Full dynamic element support (like ASP.NET), so you can pick elements to replace at runtime

Features:
- {variable} to echo $object-&gt;variable
- {method()} to echo $object-&gt;method();
- {foreach:var,key,value} to PHP foreach loops
- tag attributes FLEXY:FOREACH, FLEXY:IF for looping and conditional HTML inclusion
- {if:variable} to PHP If statement
- {if:method()} to PHP If statement
- {else:} and {end:} to close or alternate If statements
- FORM to HTML_Template_Flexy_Element's
- replacement of INPUT, TEXTAREA and SELECT tags with HTML_Template_Flexy_Element code
  use FLEXY:IGNORE (inherited) and FLEXY:IGNOREONLY (single) to prevent replacements
- FLEXY:START/FLEXY:STARTCHILDREN tags to define where output starts/finishes
- support for urlencoded braces {} in HTML attributes.  
- documentation in the pear manual
</d>
 <da>2003-09-03 13:48:00</da>
 <n>Warning: BC Breaking release
Warning: Still in Beta Testing.. (although most of the API should now be settled)

Due to the conclusion that the quickforms integration was not only messy, but 
a heavy weight to be carried. The whole form/dynamic element layer was re-engineered.
And the dependancy on QuickForms removed

New Features
  HTML_Template_Flexy_Element, is a small simple representation of  generic HTML,
  it is used to store the representation of form elements, and any HTML element 
  which contains the FLEXY:DYNAMIC attribute.
  
  you can override elements, by using the new second argument to outputObject($object,$elements)
  where $elements is an associate array of (form name)=&gt;Element
  and the data in the elements array is merged with the visable template at runtime.
  (so you only need to define what is different to the HTML, not the whole tag.)
  
  You can make any tag 'dynamic', by just tagging it. - if you replace the element
  in the elements array with an object that implements a toHtml method, This will be 
  called rather than the drawn element.
 
  A Utility class, HTML_Template_Flexy_Factory offers common static methods, like
  - creating element values from a key=&gt;value array (eg. Dataobjects-&gt;toArray())
  - setting error messages (as suffixes to elements)
  - flag something as required. (prefixing strings to elements)
  
  
Compiler Abstraction
  The Compiler code in Flexy is now abstracted out, to make it possible to write
  Other compilers and use the same caching/loading mechanism. (the old regex compiler
  is included as an example of this.)
  
Other BC Issues:
  all Flexy attributes must now be prefixed with &quot;flexy:&quot; namespace (eg. if, foreach, startchildren etc.)

Other New Features
  - support for array strings on variables and methods = eg. {somevar[xxx][yyy].toHtml():h}
  - added new Modifiers:r (print_r), and :n (number_format), and in future may make available user defined modifiers</n>
 <f>46737</f>
 <g>http://pear.php.net/get/HTML_Template_Flexy-0.5</g>
 <x xlink:href="package.0.5.xml"/>
</r>