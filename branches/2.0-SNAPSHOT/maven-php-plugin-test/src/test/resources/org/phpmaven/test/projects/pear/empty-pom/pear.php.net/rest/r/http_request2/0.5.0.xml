<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release
    http://pear.php.net/dtd/rest.release.xsd">
 <p xlink:href="/rest/p/http_request2">HTTP_Request2</p>
 <c>pear.php.net</c>
 <v>0.5.0</v>
 <st>alpha</st>
 <l>BSD License</l>
 <m>avb</m>
 <s>Provides an easy way to perform HTTP requests.</s>
 <d>PHP5 rewrite of HTTP_Request package. Provides cleaner API and pluggable
Adapters. Currently available are:
  * Socket adapter, based on old HTTP_Request code,
  * Curl adapter, wraps around PHP's cURL extension,
  * Mock adapter, to use for testing packages dependent on HTTP_Request2.
Supports POST requests with data and file uploads, basic and digest 
authentication, cookies, proxies, gzip and deflate encodings, monitoring 
the request progress with Observers...</d>
 <da>2009-11-18 18:36:25</da>
 <n>* Redirect support added, new configuration parameters 'follow_redirects',
  'max_redirects' and 'strict_redirects' available

* Implemented workaround for PHP bug #47204, Curl Adapter can now handle
  Digest authentication and redirects when doing POST requests, unfortunately
  this requires loading the entire request body into memory.
* Config parameter 'use_brackets' is propagated to created instances of Net_URL2
* Prevent memory leaks due to circular references (request #16646)
* Fixed a misleading error message when timing out due to default_socket_timeout
* HTTP_Request2::setBody() can now accept an instance of HTTP_Request2_MultipartBody
  without trying to convert it to string
* Calling HTTP_Request2::setBody() now clears post parameters and uploads</n>
 <f>57903</f>
 <g>http://pear.php.net/get/HTTP_Request2-0.5.0</g>
 <x xlink:href="package.0.5.0.xml"/>
</r>