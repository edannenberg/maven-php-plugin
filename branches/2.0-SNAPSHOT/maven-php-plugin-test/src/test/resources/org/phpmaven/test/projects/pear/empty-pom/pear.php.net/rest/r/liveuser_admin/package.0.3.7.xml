<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0" packagerversion="1.4.6">
 <name>LiveUser_Admin</name>
 <summary>User authentication and permission management framework</summary>
 <description>LiveUser_Admin is meant to be used with the LiveUser package.
  It is composed of all the classes necessary to administrate
  data used by LiveUser.

  You&apos;ll be able to add/edit/delete/get things like:
  * Rights
  * Users
  * Groups
  * Areas
  * Applications
  * Subgroups
  * ImpliedRights

  And all other entities within LiveUser.

  At the moment we support the following storage containers:
  * DB
  * MDB
  * MDB2

  But it takes no time to write up your own storage container,
  so if you like to use native mysql functions straight, then it&apos;s possible
  to do so in under a hour!
 </description>
 <maintainers>
  <maintainer>
   <user>mw21st</user>
   <name>Markus Wolff</name>
   <email>mw21st@php.net</email>
   <role>lead</role>
  </maintainer>
  <maintainer>
   <user>arnaud</user>
   <name>Arnaud Limbourg</name>
   <email>arnaud@php.net</email>
   <role>lead</role>
  </maintainer>
  <maintainer>
   <user>lsmith</user>
   <name>Lukas Kahwe Smith</name>
   <email>smith@pooteeweet.org</email>
   <role>lead</role>
  </maintainer>
  <maintainer>
   <user>dufuz</user>
   <name>Helgi Ã?ormar</name>
   <email>dufuz@php.net</email>
   <role>lead</role>
  </maintainer>
  </maintainers>
 <release>
  <version>0.3.7</version>
  <date>2006-02-21</date>
  <license>LGPL</license>
  <state>beta</state>
  <notes>- fix &quot;No rights for a user if the user only has inherited rights&quot; (bug #6374)
- do not overwrite all filters in _get*() helper methods
- minor issue with &apos;alias&apos; position in the config array in example1
- make sure that tables required as intermediate join steps are listed in the from
- add depth parameter to createJoinFilter (may be used to determine shortest join path eventually)
- fixed detection if list of tables has been reduced or not
- do not push an error on the stack for a possible recursion because it may just
  be one possible path we are evaluating
- added &quot;by_group&quot; optional parameter to params getRights() which determines if
  the userrights table should be used or rather the grouprights and groupupsers tables
- incorrect handling of filters inside unimplyRights() (bug #6592)
- renamed &quot;connection&quot; config option to &quot;dbc&quot; *BC BREAK*
- cleaned up and unified init() in the storage classes
- added support for &apos;*&apos; in fields list as an alias to fetch all fields in the root table
- made LiveUser_Admin::getUsers() API as flexible as in the containers *BC BREAK*
- fixed serious issue in join filter handling that caused join filters to be ignored
- removed allowDuplicateHandles and allowEmptyPasswords options, they are now
  handled through the table definition in the given Globals.php (overwriteable
  via the config array) *BC BREAK*
- typo fix in extended module loading in the MDB2 storage container
- fixed inherited and implied handling in getRights() when fetching only 2 columns
- added initial version of a PDO storage container (needs more testing)
- removed setCurrentApplication()/getCurrentApplication() methods since they are
  no longer relevant *BC BREAK*
  </notes>
  <deps>
   <dep type="php" rel="ge" version="4.2.0" optional="no"/>
   <dep type="pkg" rel="ge" version="1.3.1" optional="no">PEAR</dep>
   <dep type="pkg" rel="ge" version="0.16.0" optional="no">LiveUser</dep>
   <dep type="pkg" rel="ge" version="1.7.0" optional="yes">Log</dep>
   <dep type="pkg" rel="ge" version="1.6.0" optional="yes">DB</dep>
   <dep type="pkg" rel="ge" version="1.1.4" optional="yes">MDB</dep>
   <dep type="pkg" rel="ge" version="2.0.0RC1" optional="yes">MDB2</dep>
   <dep type="pkg" rel="has" optional="yes">XML_Tree</dep>
   <dep type="pkg" rel="has" optional="yes">Crypt_RC4</dep>
  </deps>
  <provides type="class" name="LiveUser_Admin_Auth_Storage_DB" extends="LiveUser_Admin_Storage_DB" />
  <provides type="function" name="LiveUser_Admin_Auth_Storage_DB::init" />
  <provides type="class" name="LiveUser_Admin_Auth_Storage_MDB" extends="LiveUser_Admin_Storage_MDB" />
  <provides type="function" name="LiveUser_Admin_Auth_Storage_MDB::init" />
  <provides type="class" name="LiveUser_Admin_Auth_Storage_MDB2" extends="LiveUser_Admin_Storage_MDB2" />
  <provides type="function" name="LiveUser_Admin_Auth_Storage_MDB2::init" />
  <provides type="class" name="LiveUser_Admin_Auth_Storage_PDO" extends="LiveUser_Admin_Storage_PDO" />
  <provides type="function" name="LiveUser_Admin_Auth_Storage_PDO::init" />
  <provides type="class" name="LiveUser_Admin_Auth_Common" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::init" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::decryptPW" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::encryptPW" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::addUser" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::updateUser" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::removeUser" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::getUsers" />
  <provides type="function" name="LiveUser_Admin_Auth_Common::disconnect" />
  <provides type="class" name="LiveUser_Admin_Auth_DB" extends="LiveUser_Admin_Auth_Common" />
  <provides type="class" name="LiveUser_Admin_Auth_MDB" extends="LiveUser_Admin_Auth_Common" />
  <provides type="class" name="LiveUser_Admin_Auth_MDB2" extends="LiveUser_Admin_Auth_Common" />
  <provides type="class" name="LiveUser_Admin_Auth_PDO" extends="LiveUser_Admin_Auth_Common" />
  <provides type="class" name="LiveUser_Admin_Perm_Storage_DB" extends="LiveUser_Admin_Storage_DB" />
  <provides type="function" name="LiveUser_Admin_Perm_Storage_DB::init" />
  <provides type="class" name="LiveUser_Admin_Perm_Storage_MDB" extends="LiveUser_Admin_Storage_MDB" />
  <provides type="function" name="LiveUser_Admin_Perm_Storage_MDB::init" />
  <provides type="class" name="LiveUser_Admin_Perm_Storage_MDB2" extends="LiveUser_Admin_Storage_MDB2" />
  <provides type="function" name="LiveUser_Admin_Perm_Storage_MDB2::init" />
  <provides type="class" name="LiveUser_Admin_Perm_Storage_PDO" extends="LiveUser_Admin_Storage_PDO" />
  <provides type="function" name="LiveUser_Admin_Perm_Storage_PDO::init" />
  <provides type="class" name="LiveUser_Admin_Perm_Complex" extends="LiveUser_Admin_Perm_Medium" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::assignSubGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::unassignSubGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::implyRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::unimplyRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::addAreaAdmin" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::removeAreaAdmin" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::removeArea" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::removeRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::removeGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::getParentGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::getGroups" />
  <provides type="function" name="LiveUser_Admin_Perm_Complex::getRights" />
  <provides type="class" name="LiveUser_Admin_Perm_Medium" extends="LiveUser_Admin_Perm_Simple" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::addGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::updateGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::removeGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::grantGroupRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::updateGroupRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::revokeGroupRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::addUserToGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::removeUserFromGroup" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::getRights" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::removeRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::removeUser" />
  <provides type="function" name="LiveUser_Admin_Perm_Medium::getGroups" />
  <provides type="class" name="LiveUser_Admin_Perm_Simple" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::init" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::addUser" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::updateUser" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::removeUser" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::addRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::updateRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::removeRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::addArea" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::updateArea" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::removeArea" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::addApplication" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::updateApplication" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::removeApplication" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::grantUserRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::updateUserRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::revokeUserRight" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::addTranslation" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::updateTranslation" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::removeTranslation" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::getUsers" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::getRights" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::getAreas" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::getApplications" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::getTranslations" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::outputRightsConstants" />
  <provides type="function" name="LiveUser_Admin_Perm_Simple::disconnect" />
  <provides type="class" name="LiveUser_Admin_Storage_DB" extends="LiveUser_Admin_Storage_SQL" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::init" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::quote" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::implodeArray" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::setLimit" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::exec" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::queryOne" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::queryRow" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::queryCol" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::queryAll" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::nextId" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::getBeforeId" />
  <provides type="function" name="LiveUser_Admin_Storage_DB::getAfterId" />
  <provides type="class" name="LiveUser_Admin_Storage_MDB" extends="LiveUser_Admin_Storage_SQL" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::init" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::quote" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::implodeArray" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::setLimit" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::exec" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::queryOne" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::queryRow" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::queryCol" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::queryAll" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::nextId" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::getBeforeId" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB::getAfterId" />
  <provides type="class" name="LiveUser_Admin_Storage_MDB2" extends="LiveUser_Admin_Storage_SQL" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::init" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::quote" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::implodeArray" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::setLimit" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::exec" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::queryOne" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::queryRow" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::queryCol" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::queryAll" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::nextId" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::getBeforeId" />
  <provides type="function" name="LiveUser_Admin_Storage_MDB2::getAfterId" />
  <provides type="class" name="LiveUser_Admin_Storage_PDO" extends="LiveUser_Admin_Storage_SQL" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::init" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::quote" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::implodeArray" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::setLimit" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::exec" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::queryOne" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::queryRow" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::queryCol" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::queryAll" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::nextId" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::getBeforeId" />
  <provides type="function" name="LiveUser_Admin_Storage_PDO::getAfterId" />
  <provides type="class" name="LiveUser_Admin_Storage_SQL" extends="LiveUser_Admin_Storage" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::insert" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::createInsert" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::update" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::createUpdate" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::delete" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::createDelete" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::selectCount" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::select" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::createSelect" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::createWhere" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::findTables" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::createJoinFilter" />
  <provides type="function" name="LiveUser_Admin_Storage_SQL::disconnect" />
  <provides type="class" name="LiveUser_Admin" />
  <provides type="function" name="LiveUser_Admin::factory" />
  <provides type="function" name="LiveUser_Admin::singleton" />
  <provides type="function" name="LiveUser_Admin::setAdminAuthContainer" />
  <provides type="function" name="LiveUser_Admin::setAdminPermContainer" />
  <provides type="function" name="LiveUser_Admin::init" />
  <provides type="function" name="LiveUser_Admin::addUser" />
  <provides type="function" name="LiveUser_Admin::updateUser" />
  <provides type="function" name="LiveUser_Admin::removeUser" />
  <provides type="function" name="LiveUser_Admin::getUsers" />
  <provides type="function" name="LiveUser_Admin::getErrors" />
  <provides type="class" name="LiveUser_Admin_Storage" />
  <provides type="function" name="LiveUser_Admin_Storage::init" />
  <provides type="function" name="LiveUser_Admin_Storage::disconnect" />
  <filelist>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="195abdfff1b48872ad61f5a9daf7ce84" name="Auth/Storage/DB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="a7be0fd49866cbee62e2b48329348e6d" name="Auth/Storage/MDB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="de3ae12a881f691f7d3c2cb2a1e83130" name="Auth/Storage/MDB2.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="15b01d5970b88c92dc6846a5525585ca" name="Auth/Storage/PDO.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="5575faff402234940e82418fb23fa35d" name="Auth/Common.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="e2cf939ff2bbb41ee5404431238a0c3d" name="Auth/DB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="c747bb1402b4e9da1ac4c6a8438cb69a" name="Auth/MDB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="13134560923d27a26fa4c98116d3e998" name="Auth/MDB2.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="43d974f78c44853a6a6ffbe0484b03e0" name="Auth/PDO.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="73c07104cfeca74b240b5122e183e8ce" name="docs/examples/example1/Application.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="11aa4f0cc1cf0fde32bcc17a595dbb82" name="docs/examples/example1/Area.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="d376b5848fc7b35ca4ae3364193d21f5" name="docs/examples/example1/Area_Admin_Areas.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="37edaa8ca6a33057dbce1445b0e26d38" name="docs/examples/example1/config.inc.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="263059b5727743c660c75987511ee617" name="docs/examples/example1/demodata.xml"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="5fe6306f94a1dae8dd58a023d9f4cc05" name="docs/examples/example1/Group.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="65160919779bddf50fe18a684055084a" name="docs/examples/example1/GroupRights.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="f759b76727bdb73d5d44cd22002725bb" name="docs/examples/example1/ImplyRights.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="cdcae37e7b9d08530ddb99b3eeff8457" name="docs/examples/example1/index.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="a97325c851eb12d337eaae8a921d4e98" name="docs/examples/example1/OutputRightsConstants.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="bb0bbae65ba158c64ee888342bb2aa87" name="docs/examples/example1/Rights.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="a61f589f278e08d9c6f33b34f9bc1f8e" name="docs/examples/example1/Subgroups.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="00b5169fc9ef07cb6674761c43f7ada7" name="docs/examples/example1/test.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="fb19374b9c435a28c64f17d2ff28e9a4" name="docs/examples/example1/Translation.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="fcd1b0983ea568aed1d6f84319906102" name="docs/examples/example1/User.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="bf0531011c8d71162f99b841d755ab0f" name="docs/examples/example1/UserGroup.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="1bded33cee959c9f55c17ce91797efe4" name="docs/examples/example1/UserRights.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="3fe4894b85668a5ee958dffbc404e1cf" name="docs/examples/example3/area51.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="8b862d19ad3d090105b113ecbddbd6d8" name="docs/examples/example3/coffeemaker.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="3df213f5b5fbc82cfc6b56a1503be8cf" name="docs/examples/example3/conf.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="c5b470a1c91bd7cb3f5177184092d9fc" name="docs/examples/example3/demodata.xml"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="64bf384674ea41003996482b10c06007" name="docs/examples/example3/example.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="9df118a19c46c9aba51f77e7678f7220" name="docs/examples/example3/index.html"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="fdba00fc8da8d08ce3a2d1b2f7fc5bae" name="docs/examples/example3/loginscreen.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="c914ae7436bbd1d385b40eda52360b81" name="docs/examples/example3/main.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="6d0a114efb74e64f53ed29ac8c4fc817" name="docs/examples/example3/nav.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="9fff2f8f1040226a254e37f788446054" name="docs/examples/example3/testarea.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="7490e122a2ec440756d7385fded6b3ee" name="docs/examples/README"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="b94587a6ece2a87eced1f87cb502f61e" name="Perm/Storage/DB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="54aabc10e0091a9201779f7e4b10ce34" name="Perm/Storage/MDB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="9696a8a799bcfe20d8c80028729d5ac1" name="Perm/Storage/MDB2.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="e08c47057e6f76af69f5c8ba4aae2d39" name="Perm/Storage/PDO.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="29dc6f302e6fb2340262fd86735c39dd" name="Perm/Complex.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="011614baa245f3ec7a08aa4e0b8a3ee1" name="Perm/Medium.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="2f5cdcb5e32f1bb5021c56f865e49c26" name="Perm/Simple.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="2a2bc69bff40e7137c575baab8ea7563" name="Storage/DB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="c0f1e9ad259998b4db405be075dd9018" name="Storage/MDB.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="8a390974a84f757c8efc64718533f5fe" name="Storage/MDB2.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="f3213d9088a7a7e183e4b1aa53b53660" name="Storage/PDO.php"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="02d493bb24548c2a0684c224d710766f" name="Storage/SQL.php"/>
   <file role="php" baseinstalldir="/LiveUser" md5sum="91ceef9761f3eda4089daaef766ba976" name="Admin.php"/>
   <file role="doc" baseinstalldir="/LiveUser/Admin" md5sum="03fb004783f456bfd292dde36ab5c489" name="lgpl.txt"/>
   <file role="php" baseinstalldir="/LiveUser/Admin" md5sum="0d4f834ed09cf1d0f348ef625261e473" name="Storage.php"/>
  </filelist>
 </release>
 <changelog>
   <release>
    <version>0.3.7</version>
    <date>2006-02-21</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- fix &quot;No rights for a user if the user only has inherited rights&quot; (bug #6374)
- do not overwrite all filters in _get*() helper methods
- minor issue with &apos;alias&apos; position in the config array in example1
- make sure that tables required as intermediate join steps are listed in the from
- add depth parameter to createJoinFilter (may be used to determine shortest join path eventually)
- fixed detection if list of tables has been reduced or not
- do not push an error on the stack for a possible recursion because it may just
  be one possible path we are evaluating
- added &quot;by_group&quot; optional parameter to params getRights() which determines if
  the userrights table should be used or rather the grouprights and groupupsers tables
- incorrect handling of filters inside unimplyRights() (bug #6592)
- renamed &quot;connection&quot; config option to &quot;dbc&quot; *BC BREAK*
- cleaned up and unified init() in the storage classes
- added support for &apos;*&apos; in fields list as an alias to fetch all fields in the root table
- made LiveUser_Admin::getUsers() API as flexible as in the containers *BC BREAK*
- fixed serious issue in join filter handling that caused join filters to be ignored
- removed allowDuplicateHandles and allowEmptyPasswords options, they are now
  handled through the table definition in the given Globals.php (overwriteable
  via the config array) *BC BREAK*
- typo fix in extended module loading in the MDB2 storage container
- fixed inherited and implied handling in getRights() when fetching only 2 columns
- added initial version of a PDO storage container (needs more testing)
- removed setCurrentApplication()/getCurrentApplication() methods since they are
  no longer relevant *BC BREAK*
    </notes>
   </release>
   <release>
    <version>0.3.6</version>
    <date>2005-12-21</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- dont raise an error when no user is found in getUsers() helper method (bug #5690)
- fixed bug in handling of _checkExplicitTable() return value in findTables() (bug #5706)
- tweaked error messages for failed factory method calls
- renamed query() to exec() to match the MDB2 RC1 API
- use exec() instead of query()
- handle database structure merging inside the Storage class
  (previously handled in the auth/perm backend drivers)
- improved sanity checking in insert and update when values for undefined fields are passed
- do nothing in update() if an empty data array is passed
- required fields may not be unset, but may be empty strings
  (corrected overly strict check in update() method)
- owner_*_id is no longer necessary for the tests
- leave owner_user_id management to the developer
- tweaked errors messages in insert() and update()
- in createJoinFilter first work through all the direct matches before recursing
- typo in loadModule call in the MDB2 backend (bug #6092)
- removed loginTimeout feature (disable lastlogin if you are concerned about
  the cost of updating the lastlogin time)
- tons of phpdoc and whitespace fixes and additions
- updated API calls to LiveUser to version 0.16.8
- renamed setAdminContainers() to init()
    </notes>
   </release>
   <release>
    <version>0.3.5</version>
    <date>2005-10-10</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- only alias orders fields if needed (bug #5310)
- fixed warning in _getGroupsWithHierarchy() if filters match no group
- several typo fixes in getGroups() in the complex container
- several fixes to getRights() in the complex container (bug #5453)
- added test.php to the linkbar in example1
- removed autoInit (call setAdminContainers() manually instead) *BC BREAK*
- reworked log/debug handling (there is a new &apos;debug&apos; conf option which can
  either be a bool or a log instance)
- made the log property public which made it possible to remove addErrorLog()
- use static LiveUser::PEARLogFactory instead of loadPEARLog()
    </notes>
   </release>
   <release>
    <version>0.3.4</version>
    <date>2005-09-02</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- fixed typo error in sanity checking of the SQL storage layer update() method
- fixed bug in the SQL storage layer insert() method that would lead to the
  sequence value not being returned if it was set externally. this for example
  leads to broken behaviour  in the addUser() wrapper method in LiveUser_Admin
- added error handler to example1 so that notices and warnings will not go
  unnoticed so easily in the large output
    </notes>
   </release>
   <release>
    <version>0.3.3</version>
    <date>2005-08-17</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- typo fix in phpdoc (bug #5054)
- removed space in the example1 directory name
- ensure that fields are properly aliased (bug #5059)
- added an aliased field to exampl1 so that we can better test liveuser_admin
- several CS fixes
- removed uncessary optional dependencies on XML_Tree and Crypt_RC4
- fixed issue in upate() handling in the storage of required fields
- supress errors due to deleting non existant tables in example1
- fixed bug in setFetchMode() calling in example1
- removed warning about extra_sql.sql in example1
- pass the storage config array by ref after all
    </notes>
   </release>
   <release>
    <version>0.3.2</version>
    <date>2005-08-09</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- copy storage config before passing it to the storageFactory() since this
  method messes with the values which causes the original to be modified due to
  using pass by reference
- removed old &apos;with&apos; handling code that is no longer necessary from getGroups()
  in the medium container
    </notes>
   </release>
   <release>
    <version>0.3.1</version>
    <date>2005-07-19</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- php 4.4 reference assignment fixes
- dont filter out subgroups from the previous level in
  _getGroupsWithHierarchy() (bug #4860)
    </notes>
   </release>
   <release>
    <version>0.3.0</version>
    <date>2005-06-21</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- added _call() overloading method for php5 users in LiveUser_Admin class
- dont require a conf array for all but the first call of singleton()
- updated LiveUser dependency

storage
- delete() now uses findTable() to ensure that only defined table with the
  proper fields are being used
- findTable() now only prefixes fields if necessary
- added ability to prefix explicit tables in findTables()
- no longer use &quot;ids&quot; in insert so we can remove this information from the
  Globals.php file in the client
- added support for table name aliasing
- tweaked NULL value handling in createWhere() (bug #4638)

authentication
- typo fix (bug #4109)
- typo fix (bug #4173)
- moved to admin storage class
- tweaked disconnect to only disconnect when a new connection was made

permission
- typo fix: hierachy -&gt; hierarchy (bug #4150)
- improved the &quot;with&quot; support (fixing bug #3245)
- tweaked disconnect to only disconnect when a new connection was made
- fixed bug that would lead to hierarchy mode in getGroups only fetching the
  first subgroup level (bug #4633)

examples
- examples were converted to use MDB2_Schema. See the demodata.php script found
  in the client part (http://cvs.php.net/co.php/pear/LiveUser/docs/examples/demodata.php)
- removed the test.php script since this code is outdated and serves no purpose any longer
- updated examples to use the new auth config layout due to using admin storage
- tweaked error handling on init() call
    </notes>
   </release>
   <release>
    <version>0.2.2</version>
    <date>2005-05-05</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- delete() now uses findTable() to ensure that only defined table with the
  proper fields are being used
- findTable() now only prefixes fields if necessary
- typo fix: hierachy -&gt; hierarchy (bug #4150)
- added ability to prefix explicit tables in findTables()
- no longer use &quot;ids&quot; in insert so we can remove this information from the
  Globals.php file in the client
- examples were converted to use MDB2_Schema. See the demodata.php script found
  in the client part (http://cvs.php.net/co.php/pear/LiveUser/docs/examples/demodata.php)
- added _call() overloading method for php5 users in LiveUser_Admin class
- added support for table name aliasing (fairly untested)
    </notes>
   </release>
   <release>
    <version>0.2.1</version>
    <date>2005-03-30</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- typo fix in autoinit option (bug #3844)
- updated LiveUser dependency to 0.15.0
- fixed type handling in updateUser()
- update getErrors() with code from the LiveUser class
- typo fix in outputRightsConstants() (bug #3897)
- removed calls to make remove filter on delete of relationship tables (bug #3874)
    </notes>
   </release>
   <release>
    <version>0.2.0</version>
    <date>2005-03-15</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- perm container now also has a default init() method that is called in the factory
- delete/update now dont require a filter in the id field
- delete/update now return the number of affected rows
- use LiveUser::cryptRC4() for rc4 handling
- added support to be able to query for single values, columns and rows next to
  fetching multi dimensional arrays (&apos;select&apos; key in params array of get methods)
- improved error handling in several places to not trigger on empty results
- sequences are now named after the table they belong to
- now requiring MDB2-2.0.0beta3
- if the &quot;force-seq&quot; option is now set to false in the storage config
  MDB2 will try to use autoincrement if supported by the RDBMS (you will need
  to add autoincrement to the id fields in the applications, areas, groups,
  rights, and perm_users tables yourself)
- example 1 now outputs all queries using an MDB2 debug handler
- Subgroups now work
- ImplyRights now work
- One can now remove groups recursively by passing recursive = true to 
  removeGroup in Perm Complex container (before it was hardcoded to true,
  now defaults to false)
- Tests for SubGroups and ImplyRights up and running
- getGroup and getRight now work in Perm Complex Container
- added DB and MDB permission backends
- Complex container is now fully implemented.
- addAreaAdmin and removeAreaAdmin where added to the Complex container
- Admin.php getUser was removed and searchUser was renamed to getUsers and with
  new params (BC break!)
- give each example a unique database name
- moved selectable tables into property so that they can be overwritten
- fixed autoinit handling in factoray (bug #3133)
- added missing PEAR error to error stack conversions
- return false if we previously ensured that the value is false anyways for clarity
- call setAdminAuthContainer() in updateUser() and removeUser() to ensure that
  the proper auth container is affected
- updated the file headers as per the RFC
- getGroups() in the complex container was refactored and subgroup handling
  was reworked (BC break!)
    </notes>
   </release>
   <release>
    <version>0.1.0</version>
    <date>2004-12-20</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- refactored into a separate package from LiveUser
- severe BC breaks in the permission API in order to unify the API
- added ErrorStack
- fixed outputRightsConstants() method
- refactored storage layer to use an SQL query builder (DB and MDB support is
  currently missing but will be added in the next minor update)
- sql query builder should output more portable SQL code
- sql query builder enables full aliasing of all field names
- sql query builder only joins the necessary tables so the admin API does not
  force the usage of any table (especially the translation table)
- searchUser() now also fetches perm data
- the complex container is currently not fully implemented
    </notes>
   </release>
   <release>
    <version>0.14.0</version>
    <date>2004-12-11</date>
    <license>LGPL</license>
    <state>beta</state>
    <notes>- Refactored nto a separate package.
    </notes>
   </release>
 </changelog>
</package>
