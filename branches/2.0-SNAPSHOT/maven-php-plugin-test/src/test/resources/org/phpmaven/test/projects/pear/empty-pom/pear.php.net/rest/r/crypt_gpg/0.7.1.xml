<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release
    http://pear.php.net/dtd/rest.release.xsd">
 <p xlink:href="/rest/p/crypt_gpg">Crypt_GPG</p>
 <c>pear.php.net</c>
 <v>0.7.1</v>
 <st>beta</st>
 <l>LGPL</l>
 <m>gauthierm</m>
 <s>GNU Privacy Guard (GPG)</s>
 <d>This package provides an object oriented interface to GNU Privacy Guard (GPG). It requires the GPG executable to be on the system.

Though GPG can support symmetric-key cryptography, this package is intended only to facilitate public-key cryptography.

This package requires PHP version 5.2.1 or greater.</d>
 <da>2008-09-23 17:02:27</da>
 <n>Small cleanups in generated API documentation. See 0.7.0 release notes:

Brought to you by strace, xdebug, time and phpunit.

API is beta -- there are significant API changes in this release. See the API or end-user documentation for details. Other changes in this release include:
 * support operations on large strings properly. Bug #13806.
 * support operations on files (or anything fopen-able). Bug #13586.
 * encryption speed improvements (went from 10 seconds to encrypt a    1.9 MiB file to 0.1 - 0.2 seconds). There is new file-specific API.    see the API docs for details.
 * remove GnuPG driver and driver architecture [BC BREAK]. The pecl    extension powering the GnuPG driver is missing features and doesn't    support any extra features that make it desirable to use. Crypt_GPG    still has nicer error handling, a greater feature set, better    documentation and more comprehensive tests.
 * split GPG I/O engine into a separate class
 * support multiple encryption, decryption and signing recipients    [BC BREAK]. Bug #13808. This moves the API towards something more    like the PECL gnupg extension where you add and clear keys for a    particular operation. This also changes the returned value of    verify() from a signature object to an array of signature objects.
 * use PHP_EOL for detecting line endings.
 * throw an exception if keychain can not be read or written.    Bug #14645.
 * split unit tests into separate files.
 * updated unit tests for new API and features.
 * throw a KeyNotFound exception if trying to verify a signature when    the public key is not in the keyring.
 * drop Windows support. PHP bugs and known limitations make it next    to impossible to develop for Windows correctly.</n>
 <f>220748</f>
 <g>http://pear.php.net/get/Crypt_GPG-0.7.1</g>
 <x xlink:href="package.0.7.1.xml"/>
</r>