<?xml version="1.0" encoding="ISO-8859-1" ?>
<package version="1.0">
  <name>Date</name>
  <summary>Date and Time Zone Classes</summary>
  <description>Generic classes for representation and manipulation of
dates, times and time zones without the need of timestamps,
which is a huge limitation for php programs.  Includes time zone data,
time zone conversions and many date/time conversions.
It does not rely on 32-bit system date stamps, so
you can display calendars and compare dates that date
pre 1970 and post 2038. This package also provides a class
to convert date strings between Gregorian and Human calendar formats.</description>
  <maintainers>
    <maintainer>
      <user>pajoye</user>
      <name>Pierre-Alain Joye</name>
      <email>paj@pearfr.org</email>
      <role>lead</role>
    </maintainer>
    <maintainer>
      <user>baba</user>
      <name>Baba Buehler</name>
      <email>baba@babaz.com</email>
      <role>lead</role>
    </maintainer>
    <maintainer>
      <user>mohrt</user>
      <name>Monte Ohrt</name>
      <email>mohrt@php.net</email>
      <role>lead</role>
    </maintainer>
    <maintainer>
      <user>alan_k</user>
      <name>Alan Knowles</name>
      <email>alan@akbkhome.com</email>
      <role>developer</role>
    </maintainer>
  </maintainers>
  <release>
    <version>1.3.1beta</version>
    <date>2003-05-25</date>
    <license>PHP License</license>
    <state>beta</state>
    <notes>- bugfix in beginOfNextWeek(), beginOfPreviousWeek() (thx to andreas dot kossmeier at bergfex dot at)
- bugfix in nextDayOfWeek and prevDayOfWeek (thx to koan at gmx dot at)</notes>
    <provides type="class" name="Date" />
    <provides type="function" name="Date::setDate" />
    <provides type="function" name="Date::getDate" />
    <provides type="function" name="Date::copy" />
    <provides type="function" name="Date::format" />
    <provides type="function" name="Date::getTime" />
    <provides type="function" name="Date::setTZ" />
    <provides type="function" name="Date::setTZbyID" />
    <provides type="function" name="Date::inDaylightTime" />
    <provides type="function" name="Date::toUTC" />
    <provides type="function" name="Date::convertTZ" />
    <provides type="function" name="Date::convertTZbyID" />
    <provides type="function" name="Date::addSeconds" />
    <provides type="function" name="Date::addSpan" />
    <provides type="function" name="Date::subtractSeconds" />
    <provides type="function" name="Date::subtractSpan" />
    <provides type="function" name="Date::compare" />
    <provides type="function" name="Date::before" />
    <provides type="function" name="Date::after" />
    <provides type="function" name="Date::equals" />
    <provides type="function" name="Date::isFuture" />
    <provides type="function" name="Date::isPast" />
    <provides type="function" name="Date::isLeapYear" />
    <provides type="function" name="Date::getJulianDate" />
    <provides type="function" name="Date::getDayOfWeek" />
    <provides type="function" name="Date::getWeekOfYear" />
    <provides type="function" name="Date::getQuarterOfYear" />
    <provides type="function" name="Date::getDaysInMonth" />
    <provides type="function" name="Date::getWeeksInMonth" />
    <provides type="function" name="Date::getDayName" />
    <provides type="function" name="Date::getMonthName" />
    <provides type="function" name="Date::getNextDay" />
    <provides type="function" name="Date::getPrevDay" />
    <provides type="function" name="Date::getNextWeekday" />
    <provides type="function" name="Date::getPrevWeekday" />
    <provides type="function" name="Date::getYear" />
    <provides type="function" name="Date::getMonth" />
    <provides type="function" name="Date::getDay" />
    <provides type="function" name="Date::getHour" />
    <provides type="function" name="Date::getMinute" />
    <provides type="function" name="Date::getSecond" />
    <provides type="function" name="Date::setYear" />
    <provides type="function" name="Date::setMonth" />
    <provides type="function" name="Date::setDay" />
    <provides type="function" name="Date::setHour" />
    <provides type="function" name="Date::setMinute" />
    <provides type="function" name="Date::setSecond" />
    <provides type="class" name="Date_Calc" />
    <provides type="function" name="Date_Calc::dateNow" />
    <provides type="function" name="Date_Calc::isValidDate" />
    <provides type="function" name="Date_Calc::isLeapYear" />
    <provides type="function" name="Date_Calc::isFutureDate" />
    <provides type="function" name="Date_Calc::isPastDate" />
    <provides type="function" name="Date_Calc::dayOfWeek" />
    <provides type="function" name="Date_Calc::weekOfYear" />
    <provides type="function" name="Date_Calc::julianDate" />
    <provides type="function" name="Date_Calc::quarterOfYear" />
    <provides type="function" name="Date_Calc::beginOfNextMonth" />
    <provides type="function" name="Date_Calc::endOfNextMonth" />
    <provides type="function" name="Date_Calc::beginOfPrevMonth" />
    <provides type="function" name="Date_Calc::endOfPrevMonth" />
    <provides type="function" name="Date_Calc::nextWeekday" />
    <provides type="function" name="Date_Calc::prevWeekday" />
    <provides type="function" name="Date_Calc::nextDayOfWeek" />
    <provides type="function" name="Date_Calc::prevDayOfWeek" />
    <provides type="function" name="Date_Calc::nextDayOfWeekOnOrAfter" />
    <provides type="function" name="Date_Calc::prevDayOfWeekOnOrBefore" />
    <provides type="function" name="Date_Calc::nextDay" />
    <provides type="function" name="Date_Calc::prevDay" />
    <provides type="function" name="Date_Calc::defaultCentury" />
    <provides type="function" name="Date_Calc::dateDiff" />
    <provides type="function" name="Date_Calc::compareDates" />
    <provides type="function" name="Date_Calc::daysInMonth" />
    <provides type="function" name="Date_Calc::weeksInMonth" />
    <provides type="function" name="Date_Calc::firstOfMonthWeekday" />
    <provides type="function" name="Date_Calc::beginOfMonth" />
    <provides type="function" name="Date_Calc::beginOfWeek" />
    <provides type="function" name="Date_Calc::endOfWeek" />
    <provides type="function" name="Date_Calc::beginOfNextWeek" />
    <provides type="function" name="Date_Calc::beginOfPrevWeek" />
    <provides type="function" name="Date_Calc::getCalendarWeek" />
    <provides type="function" name="Date_Calc::getCalendarMonth" />
    <provides type="function" name="Date_Calc::getCalendarYear" />
    <provides type="function" name="Date_Calc::dateToDays" />
    <provides type="function" name="Date_Calc::daysToDate" />
    <provides type="function" name="Date_Calc::NWeekdayOfMonth" />
    <provides type="function" name="Date_Calc::dateFormat" />
    <provides type="function" name="Date_Calc::getYear" />
    <provides type="function" name="Date_Calc::getMonth" />
    <provides type="function" name="Date_Calc::getDay" />
    <provides type="function" name="Date_Calc::getMonthFullname" />
    <provides type="function" name="Date_Calc::getMonthAbbrname" />
    <provides type="function" name="Date_Calc::getWeekdayFullname" />
    <provides type="function" name="Date_Calc::getWeekdayAbbrname" />
    <provides type="function" name="Date_Calc::getMonthFromFullName" />
    <provides type="function" name="Date_Calc::getMonthNames" />
    <provides type="function" name="Date_Calc::getWeekDays" />
    <provides type="function" name="Date_Calc::gregorianToISO" />
    <provides type="function" name="Date_Calc::dateSeason" />
    <provides type="class" name="Date_Human" />
    <provides type="function" name="Date_Human::gregorianToHuman" />
    <provides type="function" name="Date_Human::HumanToGregorian" />
    <provides type="class" name="Date_TimeZone" />
    <provides type="function" name="Date_TimeZone::getDefault" />
    <provides type="function" name="Date_TimeZone::setDefault" />
    <provides type="function" name="Date_TimeZone::isValidID" />
    <provides type="function" name="Date_TimeZone::isEqual" />
    <provides type="function" name="Date_TimeZone::isEquivalent" />
    <provides type="function" name="Date_TimeZone::hasDaylightTime" />
    <provides type="function" name="Date_TimeZone::inDaylightTime" />
    <provides type="function" name="Date_TimeZone::getDSTSavings" />
    <provides type="function" name="Date_TimeZone::getOffset" />
    <provides type="function" name="Date_TimeZone::getAvailableIDs" />
    <provides type="function" name="Date_TimeZone::getID" />
    <provides type="function" name="Date_TimeZone::getLongName" />
    <provides type="function" name="Date_TimeZone::getShortName" />
    <provides type="function" name="Date_TimeZone::getDSTLongName" />
    <provides type="function" name="Date_TimeZone::getDSTShortName" />
    <provides type="function" name="Date_TimeZone::getRawOffset" />
    <filelist>
      <file role="php" baseinstalldir="/" md5sum="32aa9141b88d5b1d3fab6f843f268b62" name="Date.php"/>
      <file role="php" md5sum="c0425b6fa2c0789bd5de82e1cc800cf8" name="Date/Calc.php"/>
      <file role="php" md5sum="c654944a1b0fa73ccfa4a7a66e4524ea" name="Date/Human.php"/>
      <file role="php" md5sum="f29896989cf1f731ac98ad19b6bc2289" name="Date/TimeZone.php"/>
    </filelist>
  </release>
</package>
