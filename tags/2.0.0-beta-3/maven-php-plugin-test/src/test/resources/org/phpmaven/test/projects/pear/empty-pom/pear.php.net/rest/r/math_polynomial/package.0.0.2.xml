<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0" packagerversion="1.4.5">
 <name>Math_Polynomial</name>
 <summary>Package to represent and manipulate Polynomial equations</summary>
 <description>The class Math_Polynomial represents Polynomial equations built from strings 
or from other Polynomial objects and offers some basic information about each 
Polynomial equation.  
The Math_PolynomialOp class defines operations on Math_Polynomial objects such 
as add, multiply, divide, etc.
 </description>
 <maintainers>
  <maintainer>
   <user>superwormy</user>
   <name>Keith Palmer Jr.</name>
   <email>keith@UglySlug.com</email>
   <role>lead</role>
  </maintainer>
  </maintainers>
 <release>
  <version>0.0.2</version>
  <date>2005-12-18</date>
  <license>BSD</license>
  <state>alpha</state>
  <notes>Proposal for PEAR package.
  </notes>
  <deps>
   <dep type="pkg" rel="ge" version="0.3.0" optional="yes">Math_Numerical_RootFinding</dep>
  </deps>
  <provides type="class" name="Math_Polynomial" />
  <provides type="function" name="Math_Polynomial::numTerms" />
  <provides type="function" name="Math_Polynomial::getTerm" />
  <provides type="function" name="Math_Polynomial::addTerm" />
  <provides type="function" name="Math_Polynomial::toString" />
  <provides type="function" name="Math_Polynomial::degree" />
  <provides type="function" name="Math_Polynomial::degreeString" />
  <provides type="class" name="Math_PolynomialOp" />
  <provides type="function" name="Math_PolynomialOp::create" />
  <provides type="function" name="Math_PolynomialOp::add" />
  <provides type="function" name="Math_PolynomialOp::sub" />
  <provides type="function" name="Math_PolynomialOp::mul" />
  <provides type="function" name="Math_PolynomialOp::div" />
  <provides type="function" name="Math_PolynomialOp::mod" />
  <provides type="function" name="Math_PolynomialOp::evaluate" />
  <provides type="function" name="Math_PolynomialOp::createFromRoots" />
  <provides type="function" name="Math_PolynomialOp::getRoots" />
  <provides type="function" name="Math_PolynomialOp::getRootsLinear" />
  <provides type="function" name="Math_PolynomialOp::getRootsQuadratic" />
  <provides type="function" name="Math_PolynomialOp::getRootsCubic" />
  <provides type="function" name="Math_PolynomialOp::getRootsQuartic" />
  <provides type="function" name="Math_PolynomialOp::isMath_Polynomial" />
  <provides type="function" name="Math_PolynomialOp::equals" />
  <provides type="function" name="Math_PolynomialOp::getRootsHighDegree" />
  <provides type="function" name="Math_PolynomialOp::getCriticalPoints" />
  <provides type="function" name="Math_PolynomialOp::createFunction" />
  <provides type="function" name="Math_PolynomialOp::getLocalMaximums" />
  <provides type="function" name="Math_PolynomialOp::getLocalMinimums" />
  <provides type="function" name="Math_PolynomialOp::getTangentAt" />
  <provides type="function" name="Math_PolynomialOp::createTangentFunction" />
  <provides type="function" name="Math_PolynomialOp::getSlopeAt" />
  <provides type="function" name="Math_PolynomialOp::getTangentSlopeAt" />
  <provides type="function" name="Math_PolynomialOp::getDerivative" />
  <provides type="function" name="Math_PolynomialOp::isZero" />
  <provides type="function" name="Math_PolynomialOp::isConstant" />
  <provides type="class" name="Math_PolynomialTest" extends="PHPUnit_TestCase" />
  <provides type="function" name="Math_PolynomialTest::setUp" />
  <provides type="function" name="Math_PolynomialTest::tearDown" />
  <provides type="function" name="Math_PolynomialTest::testObjectConstructor" />
  <provides type="function" name="Math_PolynomialTest::testToString" />
  <provides type="function" name="Math_PolynomialTest::testAdd" />
  <provides type="function" name="Math_PolynomialTest::testSubtract" />
  <provides type="function" name="Math_PolynomialTest::testMultiply" />
  <provides type="function" name="Math_PolynomialTest::testDivide" />
  <provides type="function" name="Math_PolynomialTest::testFirstDerivative" />
  <provides type="function" name="Math_PolynomialTest::testSecondDerivative" />
  <provides type="function" name="Math_PolynomialTest::testFromRoots" />
  <provides type="function" name="Math_PolynomialTest::testGetRootsLinear" />
  <provides type="function" name="Math_PolynomialTest::testGetRootsQuadratic" />
  <provides type="function" name="Math_PolynomialTest::testGetRootsCubic" />
  <provides type="function" name="Math_PolynomialTest::testRootsQuartic" />
  <provides type="function" name="Math_PolynomialTest::testLocalMaximums" />
  <provides type="function" name="Math_PolynomialTest::testLocalMinimums" />
  <provides type="function" name="Math_PolynomialTest::testTangent" />
  <provides type="function" name="Math_PolynomialTest::testRemainder" />
  <provides type="function" name="Math_PolynomialTest::testParamConstness" />
  <provides type="class" name="Math_PolynomialTerm" />
  <provides type="function" name="Math_PolynomialTerm::getExponent" />
  <provides type="function" name="Math_PolynomialTerm::getCoefficient" />
  <provides type="function" name="Math_PolynomialTerm::setExponent" />
  <provides type="function" name="Math_PolynomialTerm::setCoefficient" />
  <filelist>
   <file role="php" baseinstalldir="Math" md5sum="3d30fcfbff7ba5a3b6e99a5f6dce6161" name="Polynomial.php"/>
   <file role="php" baseinstalldir="Math" md5sum="e29d05a85d96f3953901e845511ef4a9" name="PolynomialOp.php"/>
   <file role="php" baseinstalldir="Math" md5sum="3249dd1434dc738f5972da063294009d" name="doc/Polynomial_examples.php"/>
   <file role="php" baseinstalldir="Math" md5sum="c52a0f89a71e4d522ce973aba4a4b7fc" name="test/PolynomialTest.php"/>
   <file role="php" baseinstalldir="Math" md5sum="50466b0fd0e614cd5b52314fcb384c1c" name="Polynomial/PolynomialTerm.php"/>
  </filelist>
 </release>
</package>
