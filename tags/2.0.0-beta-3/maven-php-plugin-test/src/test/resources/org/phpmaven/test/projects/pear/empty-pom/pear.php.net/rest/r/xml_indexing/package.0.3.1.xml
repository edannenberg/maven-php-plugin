<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0">
  <name>XML_Indexing</name>
  <summary>XML Indexing support</summary>
  <description>This package provides support for indexing XML files. It assists you in 
creating and using such indexes in order to reduce access-time to local 
XML files.</description>
  <maintainers>
    <maintainer>
      <user>olivierg</user>
      <name>Olivier Guilyardi</name>
      <email>olivier@samalyse.com</email>
      <role>lead</role>
    </maintainer>
  </maintainers>
  <release>
    <version>0.3.1</version>
    <date>2004-12-10</date>
    <license>PHP License</license>
    <state>alpha</state>
    <notes>* First release as an official PEAR package
* Modified version naming (x.y to x.y.z) in order to comply with the
  new Version Naming RFC
* Minor documentation fixes</notes>
    <deps>
      <dep type="php" rel="ge" version="4.2"/>
      <dep type="pkg" rel="ge" version="1.2" optional="no">PEAR</dep>
    </deps>
    <filelist>
      <file role="php" baseinstalldir="XML" name="Indexing/Reader.php"/>
      <file role="php" baseinstalldir="XML" name="Indexing/Builder.php"/>
      <file role="php" baseinstalldir="XML" name="Indexing/Builder/Attribute.php"/>
      <file role="php" baseinstalldir="XML" name="Indexing/Builder/Numeric.php"/>
    </filelist>
  </release>
  <changelog>
    <release>
      <version>0.3.1</version>
      <date>2004-12-10</date>
      <state>alpha</state>
      <notes>* First release as an official PEAR package
* Modified version naming (x.y to x.y.z) in order to comply with the
  new Version Naming RFC.
* Minor documentation fixes
</notes>
    </release>
    <release>
      <version>0.3</version>
      <date>2004-10-05</date>
      <state>alpha</state>
      <notes>* The workaround for PHP5's Expat bug used split() with the entire
  XML file loaded into memory. That caused heavy memory usage :
  A simple for loop is now used, to avoid duplicating the XML data
  in memory. This should reduce memory usage, but this workaround
  still makes index building much heavier on PHP5 than on PHP4.
* Added a 'gz_level' option to allow compressing the index files :
  Turned off by default.
* Namespaces now get extracted from the XML file, and are available
  through both XML_Indexing_Reader::getNamespaces() and 
  XML_Indexing_Builder::getNamespaces(). The expat parser features
  a nifty xml_set_start_namespace_decl_handler() function for this
  purpose _but_ it is buggy. A workaround has been implemented
  (somehow heavy, see XML_Indexing_Builder::_handleStartElement())
* Index files were stored by default in '/tmp', which would certainly
  fail on Windows : This is now dynamically generated using the
  system's default.
* Updated documentation headers
* Removed the XML_Indexing_Reader::create() factory method, which was 
  performing useless error checking : the constructor is now the 
  prefered way to instantiate a Reader object
</notes>
    </release>
    <release>
      <version>0.2</version>
      <date>2004-10-04</date>
      <state>alpha</state>
      <notes>* Fixed a bug where /foo/bar[n] returned the n'th occurence of 
/foo/bar in the scope of the whole document : it will now return
the n'th occurences of bar in the scope of foo. Thanks Christian 
Stocker 
* Fixing the above bug has a consequence : searching for /foo/bar[n]
may now return several occurences, instead of a single one in the prior
implementation : the numeric index format got modified consequently.
</notes>
    </release>
    <release>
      <version>0.1</version>
      <date>2004-09-29</date>
      <state>alpha</state>
      <notes>This is the initial release. 
</notes>
    </release>
  </changelog>
</package>
