<?xml version="1.0" encoding="ISO-8859-1" ?>
<package version="1.0">
  <name>XML_Transformer</name>
  <summary>XML Transformations in PHP</summary>
  <description>With the XML/Transformer class one can easily bind PHP
functionality to XML tags, thus transforming the input XML tree
into an output XML tree without the need for XSLT.</description>
  <maintainers>
    <maintainer>
      <user>sebastian</user>
      <name>Sebastian Bergmann</name>
      <email>sb@sebastian-bergmann.de</email>
      <role>lead</role>
    </maintainer>
    <maintainer>
      <user>kk</user>
      <name>Kristian Köhntopp</name>
      <email>kris@koehntopp.de</email>
      <role>developer</role>
    </maintainer>
  </maintainers>
  <release>
    <version>0.8</version>
    <date>2002-10-07</date>
    <license>PHP License</license>
    <state>stable</state>
    <notes>+ Added DocBook namespace handler.

+ Added Widget namespace handler.

* Renamed XML_Transformer_Cache and XML_Transformer_OutputBuffer
  to XML_Transformer_Driver_Cache and XML_Transformer_Driver_OutputBuffer
  respectively.

* Significant performance improvement by preventing unnecessary
  recursive parsing.

  By returning

    array(
      $cdata,
      true
    )

  instead of

    $cdata

  a callback handler for the endElement event can notify the
  Transformer not to recurively process its result.

* Improved debugging information.

* The target to which error messages and debugging information
  are beeing sent can now be configured using setLogTarget().

  The default target is the error.log.</notes>
    <deps>
      <dep type="php" rel="ge" version="4.2.0"/>
      <dep type="ext" rel="has">xml</dep>
    </deps>
    <filelist>
      <file role="php" baseinstalldir="XML" md5sum="370c4306994351ca29944ebb234de8e6" name="Transformer/Driver/Cache.php"/>
      <file role="php" baseinstalldir="XML" md5sum="a12c5f37bd1d322420374b6de1ae9ea3" name="Transformer/Driver/OutputBuffer.php"/>
      <file role="php" baseinstalldir="XML" md5sum="1502ba5028e4ad8013e13d0657e39725" name="Transformer/Namespace/Anchor.php"/>
      <file role="php" baseinstalldir="XML" md5sum="d23548e1b88afbc606016a7419316f4f" name="Transformer/Namespace/DocBook.php"/>
      <file role="php" baseinstalldir="XML" md5sum="5dd049a013b26492bf69f3508673608a" name="Transformer/Namespace/Image.php"/>
      <file role="php" baseinstalldir="XML" md5sum="978402b73c3b1436007c9c83d2af82a9" name="Transformer/Namespace/PHP.php"/>
      <file role="php" baseinstalldir="XML" md5sum="d7484c73ab6adb894a19f5285940c542" name="Transformer/Namespace/Widget.php"/>
      <file role="php" baseinstalldir="XML" md5sum="8dcea35de96a77dc63d246cc6c5c44c4" name="Transformer/CallbackRegistry.php"/>
      <file role="php" baseinstalldir="XML" md5sum="c7241f31d7483cb6dcb5cd1b0fe6aaab" name="Transformer/Namespace.php"/>
      <file role="php" baseinstalldir="XML" md5sum="bb3c38d751bf3b7c44267287f9d53897" name="Transformer/Util.php"/>
      <file role="php" baseinstalldir="XML" md5sum="79bc7e90ce91d6ab9b1ffc9e7a840b1c" name="Transformer.php"/>
    </filelist>
  </release>
  <changelog>
    <release>
      <version>0.7</version>
      <date>2002-09-22</date>
      <state>stable</state>
      <notes>+ Added Anchor namespace handler.

  The Anchor namespace handler implements a database of
  indirect links. These links can be maintained centrally
  in a single location, and can be used using

    &lt;a:iref iref=&quot;name&quot;&gt;...&lt;/a&gt;

  &lt;a:random/&gt; selects a single random link from the database.

+ Added Image namespace handler.

    + &lt;img:img/&gt; is a replacement for XHTML's &lt;img/&gt; and
      automatically determines the size of the image.

      For this, the image must be in a format that is
      understood by getimagesize().
  
    + &lt;img:gtext /&gt; is a container that renders its contents
      as a PNG graphics using ImageTTFText().

      For this to work, a cache directory below DocumentRoot
      that is writeable by the Webserver owner is necessary.
      The default is /cache/gtext.
  
    + &lt;img:gtextdefault /&gt; understands the same attributes as
      &lt;img:gtext /&gt; and supplies these to all subsequent calls
      of &lt;img:gtext /&gt;.

+ Namespace handlers can now use getLock() to disable other
  namespace handlers for the time of their transformation.
  releaseLock() is used to enable all namespace handlers
  again.

+ Added a caching version of the XML_Transformer that uses
  the Cache_Lite PEAR package to cache the result of XML
  transformations.

+ Added automatic loading of namespace handlers that are
  stored in the XML/Transformer/Namespace directory.

+ Added new tags to the PHP Namespace Handler:

    + &lt;php:namespace name=&quot;a&quot;&gt;
       &lt;php:define name=&quot;b&quot;&gt;
        &lt;p&gt;The attribute x is $x and the content is $content.&lt;/p&gt;
       &lt;/php:define&gt;
      &lt;/php:namespace&gt;

      This will define a new namespace a with a single tag b in it
      (You may put multiple defines into a namespace). If you use
      &lt;a:b x=&quot;text&quot;&gt;sometext&lt;/a:b&gt;, the variable $x will be replaced
      with the text, and the variable $content will be replaced with
      the content.

    + &lt;php:cookievariable name=&quot;&quot;/&gt; inserts the contents of a given
      HTTP Cookie into the output XML tree.

    + &lt;php:servervariable name=&quot;&quot;/&gt; inserts the contents of a
      given server variable into the output XML tree.

    + &lt;php:logic/&gt; executes a given block of PHP code and stores
      its output into the output XML tree.

* Refactored the XML_Transformer class into

    * XML_Transformer.

    * XML_Transformer_CallbackRegistry.

      This class faciliates the registration of new callbacks
      on-the-fly inside the transformation's recursion.

    * XML_Transformer_OutputBuffer.

      This class decouples the XML transformation from the output
      buffering.

    * XML_Transformer_Util.

      Static utility methods.

* Deprecated overloading of single XML elements.

  By overloading a special namespace, &amp;MAIN, the old behaviour can
  be achieved.

* setDefaultCallback() and unsetDefaultCallback() are deprecated.

  By overloading the newly introduced &amp;MAIN namespace with a class
  that provides default element handlers the old behaviour can
  be achieved.

      
</notes>
    </release>
    <release>
      <version>0.6</version>
      <date>2002-09-18</date>
      <state>stable</state>
      <notes>+ Added methods setDefaultCallback() and unsetDefaultCallback() to
  set/unset default callbacks for elements that are not overloaded.

+ Added a base class for namespace-handling transformer classes.

+ Removed canonicalName() method in favour of more general
  canonicalizeAttributes() method.

+ Added PHP namespace handler. Initially the following tags are
  supported:

    + &lt;php:expr/&gt; evaluates a given PHP expression and stores its
      return value into the output XML tree.

    + &lt;php:getvariable name=&quot;&quot;/&gt; inserts the contents of a given
      global variable into the output XML tree.

    + &lt;php:setvariable name=&quot;&quot;&gt;value&lt;/php:setvariable sets a given
      global variable to a given value.

    + &lt;php:getparameter name=&quot;&quot;/&gt; inserts the contents of a given
      HTTP GET parameter into the output XML tree.

    + &lt;php:postparameter name=&quot;&quot;/&gt; inserts the contents of a given
      HTTP POST parameter into the output XML tree.

    + &lt;php:sessionvariable name=&quot;&quot;/&gt; inserts the contents of a given
      session variable into the output XML tree.

* Fixed a bug in overloadNamespace()'s error handling.

* Recursive operation can now be selectively turned off for
  overloaded namespaces, too.

* Attributes are now canonicalized on-the-fly, rather than at
  the time of their serialization which can be too late.

  As a side-effect, the attributesToString() method can now be
  called statically.

* Fixed recursive transformation of overloaded namespaces.

* Changed license from PHP License 2.02 to PHP License 3.00.

      
</notes>
    </release>
    <release>
      <version>0.5</version>
      <date>2002-09-08</date>
      <state>stable</state>
      <notes>* Resolved infinite recursion problem that arose when handlers
  do not remove the tags of their assigned element from the input
  XML document, but only work on it's sub-tree.
      
</notes>
    </release>
    <release>
      <version>0.4</version>
      <date>2002-09-04</date>
      <state>stable</state>
      <notes>+ Added a filtering mechanism to the debugger that limits
  the generated debugging information to a given set of
  elements.

* Debugging information is now sent using error_log()
  instead of syslog().

* Fixed a bug in the case-folding handling.
      
</notes>
    </release>
    <release>
      <version>0.3</version>
      <date>2002-05-16</date>
      <state>stable</state>
      <notes>+ Added setDebug() and stackdump() to allow for easier debugging.

+ Added setRecursiveOperation() to enable/disable the recursive
  operation of the XML Transformer.

* Changed the constructor to be more intuitive and user-friendly.

* Changed setCaseFolding() to accept a second parameter to set
  the case to which XML attributes and elements are folded.
      
</notes>
    </release>
    <release>
      <version>0.2</version>
      <date>2002-04-07</date>
      <notes>* Renamed to XML_Transformer, per Stig's request.
      
</notes>
    </release>
    <release>
      <version>0.1</version>
      <date>2002-04-06</date>
      <notes>* Initial independent PEAR release.
      
</notes>
    </release>
  </changelog>
</package>
