<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release
    http://pear.php.net/dtd/rest.release.xsd">
 <p xlink:href="/rest/p/db_dataobject">DB_DataObject</p>
 <c>pear.php.net</c>
 <v>0.16</v>
 <st>stable</st>
 <l>PHP License</l>
 <m>alan_k</m>
 <s>An SQL Builder, Object Interface to Database Tables</s>
 <d>DataObject performs 2 tasks:
  1. Builds SQL statements based on the objects vars and the builder methods.
  2. acts as a datastore for a table row.
  The core class is designed to be extended for each of your tables so that you put the 
  data logic inside the data classes.
  included is a Generator to make your configuration files and your base classes.
</d>
 <da>2003-03-11 04:58:00</da>
 <n>- replaced config storage  - should improve performance
- removed production option (not required due to improved config storage)
- bugfix : added checks for is_array on ignore_sequence_keys (Hermen Heinen)
- add toArray($format) which supports sprintf to enable easy integration with
  Quickforms etc. (Demian Turner)
- add optional dataobject as variable to update(), so you can update will 
  only create an update based on what has changed. (Geoff Hopson)
- add join condition to count() (Daniel Von Fange)
- modify limit() to work with postgresql and make it emit a fatal error if you 
  try this on databases that do not directly support limit queries. (Geoff Hopson)
  * I'm open on better ideas for this - probably wrapping the find() select call</n>
 <f>21285</f>
 <g>http://pear.php.net/get/DB_DataObject-0.16</g>
 <x xlink:href="package.0.16.xml"/>
</r>