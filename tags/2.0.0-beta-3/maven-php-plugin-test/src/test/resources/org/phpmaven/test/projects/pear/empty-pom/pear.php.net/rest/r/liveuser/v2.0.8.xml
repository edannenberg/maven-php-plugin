<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/liveuser">LiveUser</p>
 <c>pear.php.net</c>
 <v>0.8</v>
 <a>0.8</a>
 <mp>4.3.0</mp>
 <st>beta</st>
 <l>LGPL</l>
 <m>mw21st</m>
 <s>User authentication and permission management framework</s>
 <d>Perm_LiveUser is a set of classes for dealing with user authentication
and permission management. Basically, there are three main elements that
make up this package:
* The LiveUser class
* The Auth containers
* The Perm containers
The LiveUser class takes care of the login process and can be configured
to use a certain permission container and one or more different auth containers.
That means, you can have your users' data scattered amongst many data containers
and have the LiveUser class try each defined container until the user is found.
For example, you can have all website users who can apply for a new account online
on the webserver's local database. Also, you want to enable all your company's
employees to login to the site without the need to create new accounts for all of
them. To achieve that, a second container can be defined to be used by the LiveUser class.
You can also define a permission container of your choice that will manage the rights for
each user. Depending on the container, you can implement any kind of permission schemes
for your application while having one consistent API.
Using different permission and auth containers, it's easily possible to integrate
newly written applications with older ones that have their own ways of storing permissions
and user data. Just make a new container type and you're ready to go!
Currently available are RDBMS containers using PEAR::DB.
More are soon to follow.
</d>
 <da>2003-08-26 22:11:00</da>
 <n>This release marks the leap from &quot;alpha&quot; to &quot;beta&quot; stage. LiveUser has been
stable for a while and been used in some real-life applications. WeÂ´re
finally satisfied with the API and do not expect anymore BC breaks from now
on. If BC breaks should occur in future versions, they will result in a
new major version number (according to PEAR rules).
If you still find any bugs, please report them to us. To get started
quickly, please download the tutorial from http://projects.21st-hq.de/liveuser/
and see the examples.
- dropped direct support for XML config files in favour of a new config
  array format that can easily be read/modified/written by PEAR::Config
  (this marks the most drastic BC change!)
- added MDB backends
- added experimental PEAR::Auth wrapper
- added direct passing of username, password and logout
- removed the need to define a login/logout method
- added table/column abstraction in the Auth container
- moved logout code to its own public method called logout()
- DB_Complex permission administration class moved to the new
  directory layout for admin classes
- admin classes accept a second parameter being the configuration
  array used (the one used with LiveUser::factory)
- auth admin classes use table abstraction
- perm admin classes table prefix
- note: the Admin/Perm/DB_Medium and DB_Complex along with
  Admin/Auth/DB should be the most up-to-date</n>
 <f>103943</f>
 <g>http://pear.php.net/get/LiveUser-0.8</g>
 <x xlink:href="package.0.8.xml"/>
</r>