<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release
    http://pear.php.net/dtd/rest.release.xsd">
 <p xlink:href="/rest/p/php_codesniffer">PHP_CodeSniffer</p>
 <c>pear.php.net</c>
 <v>1.1.0a1</v>
 <st>alpha</st>
 <l>BSD License</l>
 <m>squiz</m>
 <s>PHP_CodeSniffer tokenises PHP and JavaScript code and detects violations of a defined set of coding standards.</s>
 <d>PHP_CodeSniffer is a PHP5 script that tokenises and &quot;sniffs&quot; PHP and JavaScript code to detect violations of a defined set of coding standards. It is an essential development tool that ensures that your code remains clean and consistent. It can even help prevent some common semantic errors made by developers.</d>
 <da>2008-04-20 20:58:33</da>
 <n>- Added support for multiple tokenizers so PHP_CodeSniffer can check more than just PHP files
  -- PHP_CodeSniffer now has a JS tokenizer for checking JavaScript files
  -- Sniffs need to be updated to work with additional tokenizers, or new sniffs written for them
- phpcs now exits with status 2 if the tokenier extension has been disabled (feature request #13269)
- Added scripts/phpcs-svn-pre-commit that can be used as an SVN pre-commit hook
  - Also reworked the way the phpcs script works to make it easier to wrap it with other functionality
  - Thanks to Jack Bates for the contribution
- Fixed error in phpcs error message when a supplied file does not exist
- Fixed a cosmetic error in AbstractPatternSniff where the &quot;found&quot; string was missing some content
- Added sniffs that implement part of the PMD rule catalog to the Generic standard
  -- Thanks to Manuel Pichler for the contribution of all these sniffs.
- Squiz FunctionCommentThrowTagSniff no longer throws errors for function that only throw variables
- Generic ScopeIndentSniff now has private member to enforce exact indent matching
- Replaced Squiz DisallowCountInLoopsSniff with Squiz DisallowSizeFunctionsInLoopsSniff
  -- Thanks to Jan Miczaika for the sniff
- Squiz BlockCommentSniff now checks inline doc block comments
- Squiz InlineCommentSniff now checks inline doc block comments
- Squiz BlockCommentSniff now checks for no blank line before first comment in a function
- Squiz DocCommentAlignmentSniff now ignores inline doc block comments
- Squiz ControlStructureSpacingSniff now ensures no blank lines at the start of control structures
- Squiz ControlStructureSpacingSniff now ensures no blank lines between control structure closing braces
- Squiz IncrementDecrementUsageSniff now ensures inc/dec ops are bracketed in string concats
- Squiz IncrementDecrementUsageSniff now ensures inc/dec ops are not used in arithmetic operations
- Squiz FunctionCommentSniff no longer throws errors if return value is mixed but function returns void somewhere
- Squiz OperatorBracketSniff no allows function call brackets to count as operator brackets
- Squiz DoubleQuoteUsageSniff now supports \x \f and \v (feature request #13365)
- Squiz ComparisonOperatorUsageSniff now supports JS files
- Squiz ControlSignatureSniff now supports JS files
- Squiz ForLoopDeclarationSniff now supports JS files
- Squiz OperatorBracketSniff now supports JS files
- Squiz InlineControlStructureSniff now supports JS files
- Generic LowerCaseConstantSniff now supports JS files
- Generic DisallowTabIndentSniff now supports JS files
- Generic MultipleStatementAlignmentSniff now supports JS files
- Added Squiz ObjectMemberCommaSniff to ensure the last member of a JS object is not followed by a comma
- Added Squiz ConstantCaseSniff to ensure the PHP constants are uppercase and JS lowercase
- Added Squiz JavaScriptLintSniff to check JS files with JSL
  -- Set path using phpcs --config-set jsl_path /path/to/jsl
- Added MySource FirebugConsoleSniff to ban the use of &quot;console&quot; for JS variable and function names
- Added MySource JoinStringsSniff to enforce the use of join() to concatenate JS strings
- Added MySource AssignThisSniff to ensure this is only assigned to a var called self
- Added MySource DisallowNewWidgetSniff to ban manual creation of widget objects
- Removed warning shown in Zend CodeAnalyzerSniff when the ZCA path is not set
- Fixed error in Squiz ValidVariableNameSniff when checking vars in the form $obj-&gt;$var
- Fixed error in Squiz DisallowMultipleAssignmentsSniff when checking vars in the form $obj-&gt;$var
- Fixed error in Squiz InlineCommentSniff where comments for class constants were seen as inline
- Fixed error in Squiz BlockCommentSniff where comments for class constants were not ignored
- Fixed error in Squiz OperatorBracketSniff where negative numbers were ignored during comparisons
- Fixed error in Squiz FunctionSpacingSniff where functions after member vars reported incorrect spacing
- Fixed bug #13062 : Interface comments aren't handled in PEAR standard
  -- Thanks to Manuel Pichler for the path
- Fixed bug #13119 : php minimum requirement need to be fix
- Fixed bug #13156 : Bug in Squiz_Sniffs_PHP_NonExecutableCodeSniff
- Fixed bug #13158 : Strange behaviour in AbstractPatternSniff
- Fixed bug #13169 : Undefined variables
- Fixed bug #13178 : Catch exception in File.php
- Fixed bug #13254 : Notices output in checkstyle report causes XML issues
- Fixed bug #13446 : crash with src of phpMyAdmin
  -- Thanks to Manuel Pichler for the path</n>
 <f>235008</f>
 <g>http://pear.php.net/get/PHP_CodeSniffer-1.1.0a1</g>
 <x xlink:href="package.1.1.0a1.xml"/>
</r>