<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/mdb2">MDB2</p>
 <c>pear.php.net</c>
 <v>2.0.0RC1</v>
 <a>2.0.0RC1</a>
 <mp>4.3.0</mp>
 <st>beta</st>
 <l>BSD License</l>
 <m>lsmith</m>
 <s>database abstraction layer</s>
 <d>PEAR MDB2 is a merge of the PEAR DB and Metabase php database abstraction layers.

Note that the API will be adapted to better fit with the new php5 only PDO
before the first stable release.

It provides a common API for all supported RDBMS. The main difference to most
other DB abstraction packages is that MDB2 goes much further to ensure
portability. Among other things MDB2 features:
* An OO-style query API
* A DSN (data source name) or array format for specifying database servers
* Datatype abstraction and on demand datatype conversion
* Various optional fetch modes to fix portability issues
* Portable error codes
* Sequential and non sequential row fetching as well as bulk fetching
* Ability to make buffered and unbuffered queries
* Ordered array and associative array for the fetched rows
* Prepare/execute (bind) emulation
* Sequence emulation
* Replace emulation
* Limited sub select emulation
* Row limit support
* Transactions support
* Large Object support
* Index/Unique Key/Primary Key support
* Autoincrement emulation
* Module framework to load advanced functionality on demand
* Ability to read the information schema
* RDBMS management methods (creating, dropping, altering)
* Reverse engineering schemas from an existing DB
* SQL function call abstraction
* Full integration into the PEAR Framework
* PHPDoc API documentation
 
</d>
 <da>2005-12-21 06:23:21</da>
 <n>- added numerous testcases in the manager and reverse module
- unified case fixing in the list*() methods
- case-insensitive comparison in _isSequenceName()
- added getConnection() to fetch a native connection resource
- split index and constraint handling
- quote identifiers where possible inside the manager methods depending on
  the new 'quote_identifier' option (defaults to off)
- refactored get*Declaration() methods to use getTypeDeclaration()
- setting in_transaction to false on disconnect
- store if type has changed in compareDefinition()
- added new Function modules to handle difference in SQL functions
- added verious new test cases
- refactored test cases to use an MDB2_testcase base class
- allow empty field parameter in get*ID() methods (bug #5791)
- tweaked error messages for file loads
- split off manipulation queries into exec() method from the query() method *BC BREAK*
- only if result_types is set to false in prepare() method the query will be
  handled as a DML statement *BC BREAK*
- use a proper default value if a field is set to not null in _getDeclaration*() (bug #5930)
- added getServerVersion()
- renamed defaultOutput() to getDefaultOutput() *BC BREAK*
- use tableInfo() to automatically determine the result types if type is set to true
- reworked file loading to work around issues in safe_mode with MDB2::fileExists() (bug #6226)
- no need to return by reference in getConnection() (it even seems to work for
  mysqli that has objects and not resource connections)
- added &quot;idxname_format&quot; as option similar to &quot;seqname_format&quot;
- fixed bug in API calls inside autoExecute() (bug #6286)</n>
 <f>90245</f>
 <g>http://pear.php.net/get/MDB2-2.0.0RC1</g>
 <x xlink:href="package.2.0.0RC1.xml"/>
</r>