<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/phpdocumentor">PhpDocumentor</p>
 <c>pear.php.net</c>
 <v>1.3.0RC2</v>
 <a>1.3.0RC2</a>
 <mp>4.3.0</mp>
 <st>beta</st>
 <l>PHP License</l>
 <m>cellog</m>
 <s>The phpDocumentor package provides automatic documenting of php api directly from the source.</s>
 <d>The phpDocumentor tool is a standalone auto-documentor similar to JavaDoc
written in PHP.  It differs from PHPDoc in that it is MUCH faster, parses a much
wider range of php files, and comes with many customizations including 11 HTML
templates, windows help file CHM output, PDF output, and XML DocBook peardoc2
output for use with documenting PEAR.  In addition, it can do PHPXref source
code highlighting and linking.

Features (short list):
-output in HTML, PDF (directly), CHM (with windows help compiler), XML DocBook
-very fast
-web and command-line interface
-fully customizable output with Smarty-based templates
-recognizes JavaDoc-style documentation with special tags customized for PHP 4
-automatic linking, class inheritance diagrams and intelligent override
-customizable source code highlighting, with phpxref-style cross-referencing
-parses standard README/CHANGELOG/INSTALL/FAQ files and includes them
 directly in documentation
-generates a todo list from @todo tags in source
-generates multiple documentation sets based on @access private, @internal and
 {@internal} tags
-example php files can be placed directly in documentation with highlighting
 and phpxref linking using the @example tag
-linking between external manual and API documentation is possible at the
 sub-section level in all output formats
-easily extended for specific documentation needs with Converter
-full documentation of every feature, manual can be generated directly from
 the source code with &quot;phpdoc -c makedocs&quot; in any format desired.
-current manual always available at http://www.phpdoc.org/manual.php
-user .ini files can be used to control output, multiple outputs can be
 generated at once
</d>
 <da>2004-02-12 18:56:08</da>
 <n>PHP 5 support and more, fix bugs

This will be the last release in the 1.x series.  2.0 is next

Features added to this release include:

 * Full PHP 5 support, phpDocumentor both runs in and parses Zend Engine 2
   language constructs.  Note that you must be running phpDocumentor in
   PHP 5 in order to parse PHP 5 code
 * inline {@example} tag - this works just like {@source} except that
   it displays the contents of another file.  In tutorials, it works
   like &lt;programlisting&gt;
 * customizable README/INSTALL/CHANGELOG files
 * phpDocumentor tries to run .ini files out of the current directory
   first, to allow you to put them anywhere you want to
 * multi-national characters are now allowed in package/subpackage names

From both Windows and Unix, both the command-line version
of phpDocumentor and the web interface will work
out of the box by using command phpdoc - guaranteed :)

WARNING: in order to use the web interface through PEAR, you must set your
data_dir to a subdirectory of your document root.

$ pear config-set data_dir /path/to/public_html/pear

on Windows with default apache setup, it might be

C:\&gt; pear config-set data_dir &quot;C:\Program Files\Apache\htdocs\pear&quot;

After this, install/upgrade phpDocumentor

$ pear upgrade phpDocumentor

and you can browse to:

http://localhost/pear/PhpDocumentor/

for the web interface

------
WARNING: The PDF Converter will not work in PHP5.  The PDF library that it relies upon
segfaults with the simplest of files.  Generation still works great in PHP4
------

- WARNING: phpDocumentor installs phpdoc in the
  scripts directory, and this will conflict with PHPDoc,
  you can't have both installed at the same time
- Switched to Smarty 2.6.0, now it will work in PHP 5.  Other
  changes made to the code to make it work in PHP 5, including parsing
  of private/public/static/etc. access modifiers
- fixed these bugs:
 [ 834941 ] inline @link doesn't work within &lt;b&gt;
 [ 839092 ] CHM:default:default produces bad links
 [ 839466 ] {$array['Key']} in heredoc
 [ 840792 ] File Missing XML:DocBook/peardoc2:default &quot;errors.tpl&quot;
 [ 850731 ] No DocBlock template after page-level DocBlock?
 [ 850767 ] MHW Reference wrong
 [ 854321 ] web interface errors with template directory
 [ 856310 ] HTML:frames:DOM/earthli missing Class_logo.png image
 [ 865126 ] CHM files use hard paths
 [ 875525 ] &lt;li&gt; escapes &lt;pre&gt; and ignores paragraphs
 [ 876674 ] first line of pre and code gets left trimmed
 [ 877229 ] PHP 5 incompatibilities bork tutorial parsing
 [ 877233 ] PHP 5 incompatibilities bork docblock source highlighting
 [ 878911 ] [PHP 5 incompatibility] argv
 [ 879068 ] var arrays tripped up by comments
 [ 879151 ] HTML:frames:earthli Top row too small for IE
 [ 880070 ] PHP5 visability for member variables not working
 [ 880488 ] '0' file stops processing
 [ 884863 ] Multiple authors get added in wrong order.
 [ 884869 ] Wrong highligthing of object type variables
 [ 892305 ] peardoc2: summary require_once Path/File.php is PathFile.php
 [ 892306 ] peardoc2: @see of method not working
 [ 892479 ] {@link} in // comment is escaped
 [ 893470 ] __clone called directly in PackagePageElements.inc
 [ 895656 ] initialized private variables not recognized as private</n>
 <f>2668287</f>
 <g>http://pear.php.net/get/PhpDocumentor-1.3.0RC2</g>
 <x xlink:href="package.1.3.0RC2.xml"/>
</r>