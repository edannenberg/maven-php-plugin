<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/validate">Validate</p>
 <c>pear.php.net</c>
 <v>0.6.3</v>
 <a>0.6.3</a>
 <mp>4.3.0</mp>
 <st>beta</st>
 <l>New BSD</l>
 <m>pajoye</m>
 <s>Validation class</s>
 <d>Package to validate various datas. It includes :
 - numbers (min/max, decimal or not)
 - email (syntax, domain check, rfc822)
 - string (predifined type alpha upper and/or lowercase, numeric,...)
 - date (min, max)
 - uri (RFC2396)
 - possibility valid multiple data with a single method call (::multiple)
 
</d>
 <da>2006-04-20 17:46:18</da>
 <n>- email():
 * #6930, accepts options as an array to confirm to the Validate standard
   previous boolean $check_domain still accepted for backwards compatibility
 * #7176, introduces an experimental option &quot;use_rfc822&quot;
   which switch to a full RFC822 new checker
 * unit test enhanced and completed
- class_exists call in mulitple() now passes false to the autoload param
- uri():
 * #6181, Accept URI terminating with a /
 * use !empty() instead of isset()
 * minus in the top domain as http://example.co-m is invalid
 * Double slashes are accepted in the path part (requested by bjori)
   As a consequence, only URIs with full authority can be valid, no relative URI
 * documentation header completed : usage notes , options and &quot;strict&quot; parameter
 * unit tests completed and updated , use php.net instead of unavailable example.org</n>
 <f>14543</f>
 <g>http://pear.php.net/get/Validate-0.6.3</g>
 <x xlink:href="package.0.6.3.xml"/>
</r>