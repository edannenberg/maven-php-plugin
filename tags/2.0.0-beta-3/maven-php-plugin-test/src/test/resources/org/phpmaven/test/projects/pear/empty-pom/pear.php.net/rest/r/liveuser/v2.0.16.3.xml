<?xml version="1.0" encoding="UTF-8" ?>
<r xmlns="http://pear.php.net/dtd/rest.release2"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xsi:schemaLocation="http://pear.php.net/dtd/rest.release2
    http://pear.php.net/dtd/rest.release2.xsd">
 <p xlink:href="/rest/p/liveuser">LiveUser</p>
 <c>pear.php.net</c>
 <v>0.16.3</v>
 <a>0.16.3</a>
 <mp>4.3.0</mp>
 <st>beta</st>
 <l>LGPL</l>
 <m>lsmith</m>
 <s>User authentication and permission management framework</s>
 <d>LiveUser is a set of classes for dealing with user authentication
  and permission management. Basically, there are three main elements that
  make up this package:

  * The LiveUser class
  * The Auth containers
  * The Perm containers

  The LiveUser class takes care of the login process and can be configured
  to use a certain permission container and one or more different auth containers.
  That means, you can have your users' data scattered amongst many data containers
  and have the LiveUser class try each defined container until the user is found.
  For example, you can have all website users who can apply for a new account online
  on the webserver's local database. Also, you want to enable all your company's
  employees to login to the site without the need to create new accounts for all of
  them. To achieve that, a second container can be defined to be used by the LiveUser class.

  You can also define a permission container of your choice that will manage the rights for
  each user. Depending on the container, you can implement any kind of permission schemes
  for your application while having one consistent API.

  Using different permission and auth containers, it's easily possible to integrate
  newly written applications with older ones that have their own ways of storing permissions
  and user data. Just make a new container type and you're ready to go!

  Currently available are containers using:
  PEAR::DB, PEAR::MDB, PEAR::MDB2, PEAR::XML_Tree and PEAR::Auth.
 
</d>
 <da>2005-08-09 07:56:51</da>
 <n>- added new custom user field &quot;name&quot; to example1
- added missing config entries to example1 and example2
- all user related container properties now use lower case with underscores
  instead of lower bumby camel to better match the storage layer naming.
  this allows for a much simplified readUserData() method (BC break!)
- copy storage config before passing it to the storageFactory() since this
  method messes with the values which causes the original to be modified due to
  using pass by reference
- use getProperty() to read properties of the auth container
- use static calls for all factory method calls
- disconnect on logout() (bug #4928)
- fixed bugs in storageFactory()</n>
 <f>70829</f>
 <g>http://pear.php.net/get/LiveUser-0.16.3</g>
 <x xlink:href="package.0.16.3.xml"/>
</r>